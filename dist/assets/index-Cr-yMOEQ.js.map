{"version":3,"file":"index-Cr-yMOEQ.js","sources":["../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\nimport \"kaplay/global\"; // uncomment if you want to use without the k. prefix\n\nkaplay({\n  width: 1280,\n  height: 720,\n  canvas: document.querySelector(\"#mycanvas\"),\n  letterbox: true,\n});\nloadRoot(\"./\"); // A good idea for Itch.io publishing later\nloadSprite(\"nublin\", \"/sprites/pets/nublin.png\");\nloadSprite(\"werm\", \"/sprites/pets/werm.png\");\nloadSprite(\"eye\", \"/sprites/pets/eye.png\");\nloadSprite(\"bg_day\", \"/sprites/backgrounds/morning_bg.png\");\nloadSprite(\"button_feed\", \"/sprites/buttons/button_feed.png\");\nloadSprite(\"button_feed_pressed\", \"/sprites/buttons/button_feed_pushed.png\");\nloadSprite(\"button_kill\", \"/sprites/buttons/button_kill.png\");\nloadSprite(\"button_kill_pressed\", \"/sprites/buttons/button_kill_pushed.png\");\nloadSprite(\"button_play\", \"/sprites/buttons/button_play.png\");\nloadSprite(\"button_play_pressed\", \"/sprites/buttons/button_play_pushed.png\");\nloadSprite(\"apple\", \"/sprites/objects/apple.png\");\nloadSprite(\"grave\", \"/sprites/objects/grave.png\");\nloadSprite(\"poop\", \"/sprites/objects/poop.png\");\nloadSprite(\"poison\", \"/sprites/objects/effect_poison.png\");\nloadSound(\"beep\", \"/sounds/beep.mp3\");\nloadSound(\"click\", \"/sounds/click.mp3\");\nloadSound(\"eat\", \"/sounds/eat.mp3\");\nloadSound(\"meow\", \"/sounds/meow.wav\");\nloadSound(\"bell\", \"/sounds/bell.mp3\");\nloadSound(\"fart\", \"/sounds/fart.mp3\");\n\nfunction overshoot(t) {\n  const amp = 0.7;\n  const freq = 2;\n  const decay = 4;\n\n  return 1 + (amp * Math.sin(t * freq * Math.PI * 2)) / Math.exp(t * decay);\n}\n\nfunction easeOutQuint(x) {\n  return 1 - Math.pow(1 - x, 5);\n}\nfunction addParticles(name, path, x, y) {\n  loadSprite(name, path).then((data) => {\n    // Fun fact: the data parameter passed from the promise is the same as getSprite().data\n    let loadedSpriteData = getSprite(name).data;\n\n    let particleEmitter = add([\n      pos(x, y),\n      particles(\n        {\n          max: 20, // the max amount of particles generated from this emitter at one time\n          lifeTime: [2, 5], // how long the particles last before being destroyed\n          speed: [50, 200], // how fast the particles are moving\n          acceleration: [vec2(0), vec2(0, -10)], // changes the speed of the particle over its lifetime\n          damping: [0, 0.5], // slows down the particle over its lifetime\n          angle: [0, 40], // the rotation of each particle\n          angularVelocity: [-20, -20], // how fast each particle should be rotating\n          scales: [0.1], // how large the particle is over its lifetime\n          opacities: [1.0, 0.0], // the opacity of the particle over its lifetime\n          texture: loadedSpriteData.tex, // texture of the sprite\n          quads: loadedSpriteData.frames, // to tell whe emitter what frames of the sprite to use\n        },\n        {\n          shape: new Rect(vec2(0), 32, 32), // the area where particles should be emitted from (can be empty)\n          lifetime: 5, // how long the emitter should last\n          rate: 5, // the rate at which particles are emitted\n          direction: -90, // the direction where particles should be traveling\n          spread: 20, // variance in the direction where particles should be traveling\n        }\n      ),\n    ]);\n\n    // .onEnd is called when the emitter's lifetime (in this example 5 seconds), has expired.\n    particleEmitter.onEnd(() => {\n      destroy(particleEmitter);\n    });\n\n    // Emit Particles at runtime\n    particleEmitter.emit(5);\n  });\n}\n\nfunction addTextBubble({\n  message = \"\",\n  x = center().x,\n  y = center().y - 200,\n} = {}) {\n  play(\"beep\", {\n    volume: 1, // set the volume to 50%\n  });\n\n  const bubble = add([\n    anchor(\"center\"),\n    pos(x, y),\n    rect(400, 100, { radius: 8 }),\n    outline(4, BLACK),\n    scale(0.1),\n    opacity(1),\n    {\n      time: 0,\n      scaleTime: 0,\n    },\n  ]);\n\n  const bubbleText = bubble.add([\n    anchor(\"center\"),\n    text(message, {\n      size: 26,\n      opacity: 1,\n    }),\n    color(BLACK),\n  ]);\n\n  bubble.onUpdate(() => {\n    bubble.time += dt();\n\n    bubble.scaleTo(overshoot(bubble.time * 2));\n\n    if (bubble.time > 2) {\n      bubble.opacity -= dt();\n      bubbleText.opacity -= dt() / 2;\n    }\n  });\n}\n\nscene(\"main\", () => {\n  function spawnRandomPoop() {\n    wait(rand(0, 40), () => {\n      const poop = add([\n        pos(center().x + rand(0, 600), center().y + rand(0, 200)),\n        sprite(\"poop\"),\n        anchor(\"center\"),\n        area(),\n        scale(0.5),\n        {\n          time: 0,\n        },\n        \"poop\",\n      ]);\n\n      poopCount++;\n\n      poop.onClick(() => {\n        var randInt = randi(0, 10);\n        if (randInt == 1) {\n          addTextBubble({\n            message: \"u betta wash ya hands\\n b4 u feed me nasty :p\",\n          });\n        }\n\n        play(\"beep\");\n        addParticles(\n          \"heal\",\n          \"/sprites/particles/effect_heal.png\",\n          mousePos().x,\n          mousePos().y\n        );\n\n        poop.destroy();\n\n        poopCount--;\n      });\n\n      // Repeat the poop spawning\n      spawnRandomPoop();\n    });\n  }\n  // Constants\n  const followVal = 0.1;\n  const clickCooldown = 0.5;\n  const petArray = [\"nublin\", \"werm\", \"eye\"];\n\n  // Variables\n  let lastClickTime = 1;\n  let foodMeter = 40;\n  let foodLimit = 100;\n  let petIterator = 0;\n  let appleIsOut = false;\n  let hasBeenFed = false;\n  let shrinkCountdown = 1;\n  let beginShrinkTimer = false;\n  let isStarving = false;\n  let isDead = false;\n  let isIdle = true;\n  let poopCount = 0;\n  let loveMeter = 0;\n\n  // Objects\n\n  onDraw(() => {\n    drawSprite({\n      sprite: \"bg_day\",\n      pos: center(),\n      anchor: \"center\",\n    });\n  });\n\n  const pet = add([\n    pos(center()),\n    sprite(\"nublin\"),\n    anchor(\"center\"),\n    area(),\n    scale(0.5),\n    animate(),\n    {\n      time: 0,\n    },\n    \"pet\",\n  ]);\n\n  // Menu button objects\n\n  const buttonFeed = add([\n    pos(center().x, center().y + 280),\n    sprite(\"button_feed\"),\n    anchor(\"center\"),\n    area(),\n    scale(1),\n    {\n      time: 0,\n    },\n    \"button_feed\",\n  ]);\n\n  const buttonKill = add([\n    pos(center().x + 250, center().y + 280),\n    sprite(\"button_kill\"),\n    anchor(\"center\"),\n    area(),\n    scale(1),\n    {\n      time: 0,\n    },\n    \"button_kill\",\n  ]);\n\n  const buttonPlay = add([\n    pos(center().x - 250, center().y + 280),\n    sprite(\"button_play\"),\n    anchor(\"center\"),\n    area(),\n    scale(1),\n    {\n      time: 0,\n    },\n    \"button_play\",\n  ]);\n\n  wait(lastClickTime - 0.5, () => {\n    addTextBubble({ message: \"heh... ima pet!\\ntakea good care of me >:3 \" });\n  });\n\n  wait(lastClickTime - 0.5, () => {\n    addTextBubble({ message: \"heh... ima pet!\\ntakea good care of me >:3 \" });\n  });\n\n  pet.onUpdate(() => {\n    if (isIdle) {\n      pet.pos = pet.pos.lerp(\n        vec2(\n          center().x + (mousePos().x - center().x) * followVal,\n          center().y + (mousePos().y - center().y) * followVal\n        ),\n        0.04\n      );\n\n      pet.time += dt();\n      pet.pos.y += Math.sin(pet.time * 4);\n\n      foodMeter -= dt();\n      // debug.log(foodMeter);\n\n      if (hasBeenFed) {\n        shrinkCountdown -= dt();\n        if (shrinkCountdown <= 0 && foodMeter < foodLimit) {\n          shrinkCountdown = 2;\n          hasBeenFed = false;\n          beginShrinkTimer = true;\n        }\n      }\n    }\n\n    if (beginShrinkTimer && foodMeter < foodLimit) {\n      pet.scaleBy(0.99);\n      if (pet.scale <= vec2(0.5, 0.5)) beginShrinkTimer = false;\n    }\n\n    if (foodMeter < 20 && !isStarving) {\n      addTextBubble({ message: \"mannnn.....\\n im hungy....\" });\n      isStarving = true;\n    } else if (foodMeter > 20 && isStarving) {\n      isStarving = false;\n    }\n\n    if (isDead || (foodMeter <= 0 && !isDead)) {\n      addTextBubble({ message: \"im dead asl ðŸ’€\" });\n      isDead = true;\n      pet.destroy();\n      const grave = add([\n        pos(center()),\n        sprite(\"grave\"),\n        anchor(\"center\"),\n        area(),\n        scale(2),\n        animate(),\n        {\n          time: 0,\n        },\n        \"grave\",\n      ]);\n\n      play(\"bell\", {\n        volume: 0.3,\n      });\n    }\n  });\n\n  spawnRandomPoop();\n\n  pet.onClick(() => {\n    if (appleIsOut) {\n      if (time() - lastClickTime >= clickCooldown) {\n        if (!poopCount && foodMeter < foodLimit) {\n          var randInt = randi(0, 10);\n          if (randInt == 1) {\n            addTextBubble({ message: \"yyummerzz >:3\" });\n          }\n\n          addParticles(\n            \"heal\",\n            \"/sprites/particles/effect_heal.png\",\n            mousePos().x,\n            mousePos().y\n          );\n\n          play(\"eat\", {\n            volume: 0.3, // set the volume to 50%\n          });\n\n          pet.scaleBy(1.05);\n\n          appleIsOut = false;\n\n          shrinkCountdown = 5;\n          hasBeenFed = true;\n\n          if (!isDead) {\n            foodMeter += 20;\n          }\n        } else if (poopCount > 0 && foodMeter >= foodLimit) {\n          addParticles(\n            \"poison\",\n            \"/sprites/particles/effect_poison.png\",\n            mousePos().x,\n            mousePos().y\n          );\n          addTextBubble({\n            message: \"im seriously gonna throw up\\n get that away from mee\",\n          });\n          if (loveMeter > 0) {\n            loveMeter--;\n          }\n        } else if (poopCount > 0) {\n          var randInt = randi(0, 2);\n          if (randInt == 1) {\n            addTextBubble({\n              message: \"theres like.. poop\\n right there. nasty\",\n            });\n          }\n          lastClickTime = time();\n        } else {\n          var randInt = randi(0, 3);\n          if (randInt == 1) {\n            addTextBubble({ message: \"im fucken fullll bro.\" });\n          }\n          lastClickTime = time();\n        }\n      }\n    } else {\n      if (time() - lastClickTime >= clickCooldown) {\n        // addTextBubble({ message: \"ya clickt me...\\nwat a nicee click >:3\" });\n        lastClickTime = time();\n\n        loveMeter++;\n\n        addParticles(\n          \"heart\",\n          \"/sprites/particles/effect_heart.png\",\n          mousePos().x,\n          mousePos().y\n        );\n\n        play(\"meow\", {\n          volume: 1, // set the volume to 50%\n        });\n      }\n    }\n  });\n\n  onKeyPress(\"a\", () => {\n    petIterator = (petIterator - 1 + petArray.length) % petArray.length;\n    pet.sprite = petArray[petIterator];\n  });\n  onKeyPress(\"d\", () => {\n    petIterator = (petIterator + 1) % 3;\n    pet.sprite = petArray[petIterator];\n  });\n\n  // Button event handlers\n\n  onClick(\"button_feed\", () => {\n    const apple = add([\n      pos(mousePos()),\n      sprite(\"apple\"),\n      anchor(\"center\"),\n      area(),\n      scale(0.5),\n      {\n        time: 0,\n      },\n      \"apple\",\n    ]);\n\n    buttonFeed.sprite = \"button_feed_pressed\";\n\n    play(\"click\", {\n      volume: 0.3,\n    });\n\n    appleIsOut = !appleIsOut;\n\n    onUpdate(() => {\n      apple.pos = mousePos();\n      if (!appleIsOut) {\n        apple.destroy();\n        buttonFeed.sprite = \"button_feed\";\n      }\n    });\n  });\n\n  onMousePress(\"right\", () => {\n    appleIsOut = false;\n  });\n\n  onClick(\"button_kill\", () => {\n    isDead = true;\n    buttonKill.sprite = \"button_kill_pressed\";\n    wait(0.2, () => {\n      buttonKill.sprite = \"button_kill\";\n    });\n  });\n\n  onClick(\"button_play\", () => {\n    addTextBubble({ message: \"coming soon.\" });\n    buttonPlay.sprite = \"button_play_pressed\";\n\n    wait(0.2, () => {\n      buttonPlay.sprite = \"button_play\";\n    });\n  });\n});\n\ngo(\"main\");\n"],"names":["kaplay","overshoot","t","addParticles","name","path","x","y","data","loadedSpriteData","particleEmitter","addTextBubble","message","bubble","bubbleText","spawnRandomPoop","poop","poopCount","randInt","followVal","clickCooldown","petArray","lastClickTime","foodMeter","foodLimit","petIterator","appleIsOut","hasBeenFed","shrinkCountdown","beginShrinkTimer","isStarving","isDead","pet","buttonFeed","buttonKill","buttonPlay","apple"],"mappings":"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"}