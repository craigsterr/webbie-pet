{"version":3,"file":"index-Dh0R59p7.js","sources":["../../src/kaplay.js","../../src/utils/globalFunctions.js","../../src/assets.js","../../src/scenes/play.js","../../src/scenes/pet-game.js","../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\r\nimport \"kaplay/global\"; // uncomment if you want to use without the k. prefix\r\n\r\nexport const k = kaplay({\r\n  width: 1280,\r\n  height: 720,\r\n  canvas: document.querySelector(\"#mycanvas\"),\r\n  letterbox: true,\r\n});\r\n","import \"../kaplay.js\";\r\n\r\nexport function overshoot(t) {\r\n  const amp = 0.7;\r\n  const freq = 2;\r\n  const decay = 4;\r\n\r\n  return 1 + (amp * Math.sin(t * freq * Math.PI * 2)) / Math.exp(t * decay);\r\n}\r\n\r\nexport function easeOutQuint(x) {\r\n  return 1 - Math.pow(1 - x, 5);\r\n}\r\nexport function addParticles(name, path, x, y) {\r\n  loadSprite(name, path).then((data) => {\r\n    // Fun fact: the data parameter passed from the promise is the same as getSprite().data\r\n    let loadedSpriteData = getSprite(name).data;\r\n\r\n    let particleEmitter = add([\r\n      pos(x, y),\r\n      particles(\r\n        {\r\n          max: 20, // the max amount of particles generated from this emitter at one time\r\n          lifeTime: [2, 5], // how long the particles last before being destroyed\r\n          speed: [50, 200], // how fast the particles are moving\r\n          acceleration: [vec2(0), vec2(0, -10)], // changes the speed of the particle over its lifetime\r\n          damping: [0, 0.5], // slows down the particle over its lifetime\r\n          angle: [0, 40], // the rotation of each particle\r\n          angularVelocity: [-20, -20], // how fast each particle should be rotating\r\n          scales: [0.1], // how large the particle is over its lifetime\r\n          opacities: [1.0, 0.0], // the opacity of the particle over its lifetime\r\n          texture: loadedSpriteData.tex, // texture of the sprite\r\n          quads: loadedSpriteData.frames, // to tell whe emitter what frames of the sprite to use\r\n        },\r\n        {\r\n          shape: new Rect(vec2(0), 32, 32), // the area where particles should be emitted from (can be empty)\r\n          lifetime: 5, // how long the emitter should last\r\n          rate: 5, // the rate at which particles are emitted\r\n          direction: -90, // the direction where particles should be traveling\r\n          spread: 20, // variance in the direction where particles should be traveling\r\n        }\r\n      ),\r\n    ]);\r\n\r\n    // .onEnd is called when the emitter's lifetime (in this example 5 seconds), has expired.\r\n    particleEmitter.onEnd(() => {\r\n      destroy(particleEmitter);\r\n    });\r\n\r\n    // Emit Particles at runtime\r\n    particleEmitter.emit(5);\r\n  });\r\n}\r\n\r\nexport function addTextBubble({\r\n  message = \"\",\r\n  x = center().x,\r\n  y = center().y - 200,\r\n} = {}) {\r\n  play(\"beep\", {\r\n    volume: 1, // set the volume to 50%\r\n  });\r\n\r\n  const bubble = add([\r\n    anchor(\"center\"),\r\n    pos(x, y),\r\n    rect(400, 100, { radius: 8 }),\r\n    outline(4, BLACK),\r\n    scale(0.1),\r\n    opacity(1),\r\n    {\r\n      time: 0,\r\n      scaleTime: 0,\r\n    },\r\n  ]);\r\n\r\n  const bubbleText = bubble.add([\r\n    anchor(\"center\"),\r\n    text(message, {\r\n      size: 26,\r\n      opacity: 1,\r\n    }),\r\n    color(BLACK),\r\n  ]);\r\n\r\n  bubble.onUpdate(() => {\r\n    bubble.time += dt();\r\n\r\n    bubble.scaleTo(overshoot(bubble.time * 2));\r\n\r\n    if (bubble.time > 2) {\r\n      bubble.opacity -= dt();\r\n      bubbleText.opacity -= dt() / 2;\r\n    }\r\n  });\r\n}\r\n\r\nconst hexScale = 250;\r\n\r\nexport const hexPoints = [\r\n  vec2(Math.cos(0), Math.sin(0)).scale(hexScale),\r\n  vec2(Math.cos(Math.PI / 3), Math.sin(Math.PI / 3)).scale(hexScale),\r\n  vec2(Math.cos((2 * Math.PI) / 3), Math.sin((2 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n  vec2(Math.cos(Math.PI), Math.sin(Math.PI)).scale(hexScale),\r\n  vec2(Math.cos((4 * Math.PI) / 3), Math.sin((4 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n  vec2(Math.cos((5 * Math.PI) / 3), Math.sin((5 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n];\r\n\r\nexport function getOffscreenPosition(side = null) {\r\n  const margin = 100;\r\n  const chosenSide = side !== null ? side : randi(0, 4);\r\n\r\n  switch (chosenSide) {\r\n    case 0:\r\n      return vec2(rand(0, width()), -margin); // top\r\n    case 1:\r\n      return vec2(rand(0, width()), height() + margin); // bottom\r\n    case 2:\r\n      return vec2(-margin, rand(0, height())); // left\r\n    case 3:\r\n      return vec2(width() + margin, rand(0, height())); // right\r\n  }\r\n}\r\n\r\nexport function explodeParticles(name, path, x, y) {\r\n  loadSprite(name, path).then((data) => {\r\n    // Fun fact: the data parameter passed from the promise is the same as getSprite().data\r\n    let loadedSpriteData = getSprite(name).data;\r\n\r\n    let particleEmitter = add([\r\n      pos(x, y),\r\n      particles(\r\n        {\r\n          max: 20, // the max amount of particles generated from this emitter at one time\r\n          lifeTime: [2, 5], // how long the particles last before being destroyed\r\n          speed: [200, 500], // how fast the particles are moving\r\n          acceleration: [vec2(0), vec2(0, -10)], // changes the speed of the particle over its lifetime\r\n          damping: [0, 0.5], // slows down the particle over its lifetime\r\n          angle: [0, 40], // the rotation of each particle\r\n          angularVelocity: [-20, -20], // how fast each particle should be rotating\r\n          scales: [0.3, 0.2, 0.1], // how large the particle is over its lifetime\r\n          opacities: [1.0, 0.0], // the opacity of the particle over its lifetime\r\n          texture: loadedSpriteData.tex, // texture of the sprite\r\n          quads: loadedSpriteData.frames, // to tell whe emitter what frames of the sprite to use\r\n        },\r\n        {\r\n          shape: new Rect(vec2(0), 32, 32), // the area where particles should be emitted from (can be empty)\r\n          lifetime: 0.5, // how long the emitter should last\r\n          rate: 5, // the rate at which particles are emitted\r\n          direction: -90, // the direction where particles should be traveling\r\n          spread: 360, // variance in the direction where particles should be traveling\r\n        }\r\n      ),\r\n    ]);\r\n\r\n    // .onEnd is called when the emitter's lifetime (in this example 5 seconds), has expired.\r\n    particleEmitter.onEnd(() => {\r\n      destroy(particleEmitter);\r\n    });\r\n\r\n    // Emit Particles at runtime\r\n    particleEmitter.emit(5);\r\n  });\r\n}\r\n","loadRoot(\"./\");\r\nloadSprite(\"nublin\", \"/sprites/pets/nublin.png\");\r\nloadSprite(\"werm\", \"/sprites/pets/werm.png\");\r\nloadSprite(\"eye\", \"/sprites/pets/eye.png\");\r\nloadSprite(\"bg_day\", \"/sprites/backgrounds/morning_bg.png\");\r\nloadSprite(\"button_feed\", \"/sprites/buttons/button_feed.png\");\r\nloadSprite(\"button_feed_pressed\", \"/sprites/buttons/button_feed_pushed.png\");\r\nloadSprite(\"button_kill\", \"/sprites/buttons/button_kill.png\");\r\nloadSprite(\"button_kill_pressed\", \"/sprites/buttons/button_kill_pushed.png\");\r\nloadSprite(\"button_play\", \"/sprites/buttons/button_play.png\");\r\nloadSprite(\"button_play_pressed\", \"/sprites/buttons/button_play_pushed.png\");\r\nloadSprite(\"apple\", \"/sprites/objects/apple.png\");\r\nloadSprite(\"grave\", \"/sprites/objects/grave.png\");\r\nloadSprite(\"poop\", \"/sprites/objects/poop.png\");\r\nloadSprite(\"poison\", \"/sprites/particles/effect_poison.png\");\r\nloadSprite(\"flame\", \"/sprites/particles/effect_flame.png\");\r\nloadSprite(\"enemy\", \"/sprites/objects/enemy.png\");\r\nloadSprite(\"enemy2\", \"/sprites/objects/enemy2.png\");\r\nloadSprite(\"bg_night\", \"/sprites/backgrounds/night_bg.png\");\r\nloadSprite(\"sword\", \"/sprites/objects/sword.png\");\r\nloadSprite(\"hit\", \"/sprites/particles/effect_hit.png\");\r\n\r\nloadSound(\"beep\", \"/sounds/beep.mp3\");\r\nloadSound(\"click\", \"/sounds/click.mp3\");\r\nloadSound(\"eat\", \"/sounds/eat.mp3\");\r\nloadSound(\"meow\", \"/sounds/meow.wav\");\r\nloadSound(\"bong\", \"/sounds/bell.mp3\");\r\nloadSound(\"fart\", \"/sounds/fart.mp3\");\r\nloadSound(\"bullet\", \"/sounds/bullet.wav\");\r\nloadSound(\"reload\", \"/sounds/reload.mp3\");\r\nloadSound(\"night_song\", \"/sounds/skeleton_song.mp3\");\r\nloadSound(\"hurt\", \"/sounds/snd_hurt1.wav\");\r\nloadSound(\"punch\", \"/sounds/punch.wav\");\r\nloadSound(\"bell\", \"/sounds/snd_bell.wav\");\r\nloadSound(\"warning\", \"/sounds/warning.mp3\");\r\nloadSound(\"combo1\", \"/sounds/combo1.mp3\");\r\nloadSound(\"combo2\", \"/sounds/combo2.mp3\");\r\nloadSound(\"combo3\", \"/sounds/combo3.mp3\");\r\nloadSound(\"combo4\", \"/sounds/combo4.mp3\");\r\nloadSound(\"combo5\", \"/sounds/combo5.mp3\");\r\n","import \"../kaplay.js\";\r\nimport {\r\n  getOffscreenPosition,\r\n  explodeParticles,\r\n  addTextBubble,\r\n  hexPoints,\r\n} from \"../utils/globalFunctions.js\";\r\n\r\nscene(\"play\", () => {\r\n  const music = play(\"night_song\", { volume: 0.15 });\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_night\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  function spawnEnemy() {\r\n    const pos1 = getOffscreenPosition();\r\n    const enemy = add([\r\n      pos(pos1),\r\n      sprite(\"enemy\"),\r\n      anchor(\"center\"),\r\n      area({ shape: new Polygon(hexPoints) }),\r\n      scale(0.2),\r\n      rotate(0),\r\n\r\n      animate(),\r\n      {\r\n        time: 0,\r\n        prevPos: center().clone(),\r\n      },\r\n      \"enemy\",\r\n      \"destructable\",\r\n    ]);\r\n\r\n    onUpdate(() => {\r\n      enemy.pos = enemy.pos.lerp(pet.pos, difficulty / 8000);\r\n    });\r\n\r\n    wait(rand(0, 4 - difficulty / 100), () => {\r\n      if (isAlive) {\r\n        spawnEnemy();\r\n      }\r\n    });\r\n  }\r\n  function spawnEnemy2() {\r\n    const pos2 = getOffscreenPosition();\r\n\r\n    const petTarget = pet.pos.clone();\r\n    const direction = petTarget\r\n      .sub(pos2)\r\n      .unit()\r\n      .scale(difficulty * 5);\r\n\r\n    const enemy2 = add([\r\n      pos(pos2),\r\n      sprite(\"enemy2\"),\r\n      anchor(\"center\"),\r\n      area({ shape: new Polygon(hexPoints) }),\r\n      scale(0.2),\r\n      rotate(0),\r\n\r\n      animate(),\r\n      {\r\n        time: 0,\r\n        velocity: direction, // Save velocity\r\n      },\r\n      \"enemy\",\r\n      \"destructable\",\r\n    ]);\r\n\r\n    onUpdate(() => {\r\n      enemy2.move(enemy2.velocity);\r\n    });\r\n\r\n    wait(rand(0, 4 - difficulty / 100), () => {\r\n      if (isAlive) {\r\n        spawnEnemy2();\r\n      }\r\n    });\r\n  }\r\n\r\n  function spawnEnemyProjectile() {\r\n    const side1 = randi(0, 4);\r\n    let side2 = randi(0, 4);\r\n    while (side2 === side1) {\r\n      side2 = randi(0, 4);\r\n    }\r\n\r\n    const pos1 = getOffscreenPosition(side1);\r\n    const pos2 = getOffscreenPosition(side2);\r\n\r\n    play(\"warning\", { volume: 0.2 });\r\n    const predictor = add([\r\n      opacity(0.5),\r\n      {\r\n        time: 0,\r\n        blinkCount: 0,\r\n        visible: true,\r\n        draw() {\r\n          if (this.visible) {\r\n            drawLine({\r\n              p1: pos1,\r\n              p2: pos2,\r\n              width: 70,\r\n              color: rgb(255, 255, 255),\r\n            });\r\n          }\r\n        },\r\n        update() {\r\n          this.time += dt();\r\n\r\n          // Blink every 0.3 seconds\r\n          if (this.time >= 0.1) {\r\n            this.visible = !this.visible; // toggle visibility\r\n            this.time = 0;\r\n\r\n            if (!this.visible) {\r\n              this.blinkCount++;\r\n            }\r\n\r\n            // After blinking twice (two off states), destroy predictor\r\n            if (this.blinkCount >= 4) {\r\n              destroy(this);\r\n            }\r\n          }\r\n        },\r\n      },\r\n    ]);\r\n\r\n    // const pos2 = getOffscreenPosition();\r\n\r\n    // const petTarget = pet.pos.clone();\r\n    // const direction = petTarget\r\n    //   .sub(pos2)\r\n    //   .unit()\r\n    //   .scale(difficulty * 5);\r\n\r\n    const dir = pos2.sub(pos1).unit(); // Ensure dir has length 1\r\n    const speed = 2000; // units per second\r\n    const velocity = dir.scale(speed);\r\n\r\n    // 2. Add projectile with manual movement\r\n    wait(0.5, () => {\r\n      const enemyProjectile = add([\r\n        pos(pos1),\r\n        sprite(\"sword\"),\r\n        anchor(\"center\"),\r\n        area({ shape: new Polygon(hexPoints) }),\r\n        scale(0.05),\r\n        rotate(),\r\n        {\r\n          update() {\r\n            this.move(velocity);\r\n            this.angle += dt() * 1000;\r\n          },\r\n        },\r\n        \"enemy\",\r\n      ]);\r\n    });\r\n\r\n    // debug.log(4 - difficulty / 100);\r\n\r\n    wait(rand(0, 4 - difficulty / 100), () => {\r\n      if (isAlive) {\r\n        spawnEnemyProjectile();\r\n      }\r\n    });\r\n  }\r\n  var difficulty = 0;\r\n  var ammoCount = 10;\r\n  var reloadCountdown = 0.9;\r\n  var isReloading = false;\r\n  var reloadPosition;\r\n  var playerLives = 3;\r\n  var isAlive = true;\r\n\r\n  const pet = add([\r\n    pos(center()),\r\n    sprite(\"nublin\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.2),\r\n    rotate(0), // Enable rotation\r\n    animate(),\r\n    {\r\n      time: 0,\r\n      prevPos: center().clone(),\r\n    },\r\n    \"pet\",\r\n  ]);\r\n\r\n  spawnEnemy();\r\n  spawnEnemy2();\r\n  spawnEnemyProjectile();\r\n\r\n  onUpdate(() => {\r\n    difficulty += dt();\r\n    if (!isReloading) {\r\n      const target = mousePos();\r\n      const direction = target.sub(pet.pos).unit();\r\n      const stopDist = 100;\r\n      const adjustedTarget = target.sub(direction.scale(stopDist));\r\n\r\n      pet.pos = pet.pos.lerp(adjustedTarget, 0.1);\r\n\r\n      const angle = Math.atan2(direction.y, direction.x);\r\n      pet.angle = rad2deg(angle);\r\n\r\n      pet.prevPos = pet.pos.clone();\r\n    } else {\r\n      pet.pos = pet.pos.lerp(reloadPosition, 0.1);\r\n    }\r\n  });\r\n\r\n  var flamesArray = [];\r\n\r\n  function updateAmmoBar() {\r\n    for (const f of flamesArray) {\r\n      f.destroy();\r\n    }\r\n    flamesArray = [];\r\n\r\n    for (var i = 0; i < ammoCount; i++) {\r\n      const flame = add([\r\n        pos(width() - 100 - i * 50, height() - 100),\r\n        sprite(\"flame\"),\r\n        scale(0.2),\r\n        opacity(1),\r\n      ]);\r\n\r\n      flamesArray[i] = flame;\r\n    }\r\n\r\n    debug.log(flamesArray.length);\r\n  }\r\n\r\n  if (isAlive) {\r\n    onClick(() => {\r\n      updateAmmoBar();\r\n      if (ammoCount > 0 && !isReloading) {\r\n        play(\"bullet\", { volume: 0.2 });\r\n        const flame = add([\r\n          pos(pet.pos),\r\n          sprite(\"flame\"),\r\n          anchor(\"center\"),\r\n          area(),\r\n          scale(0.3),\r\n          rotate(0),\r\n          move(pet.angle, 1200),\r\n          \"flame\",\r\n        ]);\r\n\r\n        wait(3, () => {\r\n          flame.destroy();\r\n        });\r\n\r\n        ammoCount--;\r\n      }\r\n    });\r\n  }\r\n\r\n  pet.onUpdate(() => {\r\n    if (isReloading) {\r\n      reloadCountdown -= dt();\r\n      if (reloadCountdown <= 0) {\r\n        isReloading = false;\r\n        reloadCountdown = 0.9;\r\n        ammoCount = 10;\r\n        updateAmmoBar();\r\n      }\r\n    }\r\n  });\r\n\r\n  onKeyPress(\"r\", () => {\r\n    if (!isReloading) {\r\n      reloadPosition = mousePos();\r\n      isReloading = true;\r\n      play(\"reload\");\r\n    }\r\n  });\r\n\r\n  var comboCountdown = 0.2;\r\n  var comboCount = 0;\r\n\r\n  onCollide(\"pet\", \"enemy\", () => {\r\n    play(\"hurt\");\r\n    shake();\r\n    playerLives--;\r\n    if (playerLives <= 0) {\r\n      music.paused = true;\r\n      addTextBubble({\r\n        message: \"u dun killt me 💀\",\r\n        x: pet.pos.x,\r\n        y: pet.pos.y,\r\n      });\r\n      pet.destroy();\r\n      isAlive = false;\r\n    } else {\r\n      addTextBubble({ message: \"yowch!\", x: pet.pos.x, y: pet.pos.y });\r\n    }\r\n  });\r\n\r\n  var score = 0;\r\n  var bubbleText;\r\n\r\n  onCollide(\"destructable\", \"flame\", (f, e) => {\r\n    f.destroy();\r\n    e.destroy();\r\n    play(\"punch\", { volume: 0.2 });\r\n    wait(0.4, () => {\r\n      play(\"bell\", { volume: 0.4 });\r\n    });\r\n\r\n    explodeParticles(\r\n      \"hit\",\r\n      \"/sprites/particles/effect_hit.png\",\r\n      f.pos.x,\r\n      f.pos.y\r\n    );\r\n    shake();\r\n\r\n    comboCount++;\r\n    comboCountdown = 0.5;\r\n    if (bubbleText) {\r\n      bubbleText.destroy();\r\n    }\r\n    bubbleText = bubble.add([\r\n      pos(10, 10),\r\n      scale(2),\r\n      text(`Score: ${score}`, {\r\n        size: 26,\r\n        opacity: 1,\r\n      }),\r\n      color(BLACK),\r\n    ]);\r\n\r\n    switch (comboCount) {\r\n      case 1:\r\n        play(\"combo1\");\r\n        break;\r\n      case 2:\r\n        play(\"combo2\");\r\n\r\n        break;\r\n      case 3:\r\n        play(\"combo3\");\r\n        break;\r\n      case 4:\r\n        play(\"combo4\");\r\n        break;\r\n      case 5:\r\n        play(\"combo5\");\r\n        break;\r\n    }\r\n\r\n    score += comboCount * 10;\r\n  });\r\n\r\n  onUpdate(() => {\r\n    if (comboCount > 0) {\r\n      comboCountdown -= dt();\r\n      if (comboCountdown <= 0) {\r\n        comboCount = 0;\r\n        comboCountdown = 0.5;\r\n      }\r\n    }\r\n  });\r\n\r\n  // UI\r\n\r\n  // Score bubble\r\n  const bubble = add([\r\n    pos(10, 10),\r\n    rect(400, 100, { radius: 8 }),\r\n    outline(4, BLACK),\r\n    scale(0.5),\r\n    opacity(1),\r\n    {\r\n      time: 0,\r\n      scaleTime: 0,\r\n    },\r\n  ]);\r\n\r\n  // Ammo\r\n\r\n  // FOR DEBUGGING\r\n  onKeyPress(\"p\", () => {\r\n    music.stop();\r\n    go(\"play\");\r\n  });\r\n\r\n  onKeyPress(\"escape\", () => {\r\n    music.stop(\"night_song\");\r\n    go(\"main\");\r\n  });\r\n});\r\n","import \"../kaplay.js\";\r\nimport { addParticles, addTextBubble } from \"../utils/globalFunctions.js\";\r\n\r\nscene(\"main\", () => {\r\n  function spawnRandomPoop() {\r\n    if (!isDead) {\r\n      wait(rand(0, 40), () => {\r\n        const poop = add([\r\n          pos(center().x + rand(0, 600), center().y + rand(0, 200)),\r\n          sprite(\"poop\"),\r\n          anchor(\"center\"),\r\n          area(),\r\n          scale(0.5),\r\n          {\r\n            time: 0,\r\n          },\r\n          \"poop\",\r\n        ]);\r\n\r\n        poopCount++;\r\n\r\n        poop.onClick(() => {\r\n          var randInt = randi(0, 10);\r\n          if (randInt == 1) {\r\n            addTextBubble({\r\n              message: \"u betta wash ya hands\\n b4 u feed me nasty :p\",\r\n            });\r\n          }\r\n\r\n          play(\"beep\");\r\n          addParticles(\r\n            \"heal\",\r\n            \"/sprites/particles/effect_heal.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n\r\n          poop.destroy();\r\n\r\n          poopCount--;\r\n        });\r\n\r\n        // Repeat the poop spawning\r\n        spawnRandomPoop();\r\n      });\r\n    }\r\n  }\r\n  // Constants\r\n  const followVal = 0.1;\r\n  const clickCooldown = 0.5;\r\n  const petArray = [\"nublin\", \"werm\", \"eye\"];\r\n\r\n  // Variables\r\n  let lastClickTime = 1;\r\n  let foodMeter = 40;\r\n  let foodLimit = 100;\r\n  let petIterator = 0;\r\n  let appleIsOut = false;\r\n  let hasBeenFed = false;\r\n  let shrinkCountdown = 1;\r\n  let beginShrinkTimer = false;\r\n  let isStarving = false;\r\n  let isDead = false;\r\n  let isIdle = true;\r\n  let poopCount = 0;\r\n  let loveMeter = 0;\r\n\r\n  // Objects\r\n\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_day\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  const pet = add([\r\n    pos(center()),\r\n    sprite(\"nublin\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.5),\r\n    animate(),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"pet\",\r\n  ]);\r\n\r\n  // Menu button objects\r\n\r\n  const buttonFeed = add([\r\n    pos(center().x, center().y + 280),\r\n    sprite(\"button_feed\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_feed\",\r\n  ]);\r\n\r\n  const buttonKill = add([\r\n    pos(center().x + 250, center().y + 280),\r\n    sprite(\"button_kill\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_kill\",\r\n  ]);\r\n\r\n  const buttonPlay = add([\r\n    pos(center().x - 250, center().y + 280),\r\n    sprite(\"button_play\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_play\",\r\n  ]);\r\n\r\n  wait(lastClickTime - 0.5, () => {\r\n    addTextBubble({ message: \"heh... ima pet!\\ntakea good care of me >:3 \" });\r\n  });\r\n\r\n  wait(lastClickTime - 0.5, () => {\r\n    addTextBubble({ message: \"heh... ima pet!\\ntakea good care of me >:3 \" });\r\n  });\r\n\r\n  pet.onUpdate(() => {\r\n    if (isIdle) {\r\n      pet.pos = pet.pos.lerp(\r\n        vec2(\r\n          center().x + (mousePos().x - center().x) * followVal,\r\n          center().y + (mousePos().y - center().y) * followVal\r\n        ),\r\n        0.04\r\n      );\r\n\r\n      pet.time += dt();\r\n      pet.pos.y += Math.sin(pet.time * 4);\r\n\r\n      foodMeter -= dt();\r\n\r\n      if (hasBeenFed) {\r\n        shrinkCountdown -= dt();\r\n        if (shrinkCountdown <= 0 && foodMeter < foodLimit) {\r\n          shrinkCountdown = 2;\r\n          hasBeenFed = false;\r\n          beginShrinkTimer = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (beginShrinkTimer && foodMeter < foodLimit) {\r\n      pet.scaleBy(0.99);\r\n      if (pet.scale <= vec2(0.5, 0.5)) beginShrinkTimer = false;\r\n    }\r\n\r\n    if (foodMeter < 20 && !isStarving) {\r\n      addTextBubble({ message: \"mannnn.....\\n im hungy....\" });\r\n      isStarving = true;\r\n    } else if (foodMeter > 20 && isStarving) {\r\n      isStarving = false;\r\n    }\r\n\r\n    if (isDead || (foodMeter <= 0 && !isDead)) {\r\n      shake();\r\n      addTextBubble({ message: \"im dead asl 💀\" });\r\n      isDead = true;\r\n      pet.destroy();\r\n      const grave = add([\r\n        pos(center()),\r\n        sprite(\"grave\"),\r\n        anchor(\"center\"),\r\n        area(),\r\n        scale(2),\r\n        animate(),\r\n        {\r\n          time: 0,\r\n        },\r\n        \"grave\",\r\n      ]);\r\n\r\n      play(\"bong\", {\r\n        volume: 0.3,\r\n      });\r\n    }\r\n  });\r\n\r\n  spawnRandomPoop();\r\n\r\n  pet.onClick(() => {\r\n    if (appleIsOut) {\r\n      if (time() - lastClickTime >= clickCooldown) {\r\n        if (!poopCount && foodMeter < foodLimit) {\r\n          var randInt = randi(0, 10);\r\n          if (randInt == 1) {\r\n            addTextBubble({ message: \"yyummerzz >:3\" });\r\n          }\r\n\r\n          addParticles(\r\n            \"heal\",\r\n            \"/sprites/particles/effect_heal.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n\r\n          play(\"eat\", {\r\n            volume: 0.3, // set the volume to 50%\r\n          });\r\n\r\n          pet.scaleBy(1.05);\r\n\r\n          appleIsOut = false;\r\n\r\n          shrinkCountdown = 5;\r\n          hasBeenFed = true;\r\n\r\n          if (!isDead) {\r\n            foodMeter += 20;\r\n          }\r\n        } else if (poopCount > 0 && foodMeter >= foodLimit) {\r\n          addParticles(\r\n            \"poison\",\r\n            \"/sprites/particles/effect_poison.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n          addTextBubble({\r\n            message: \"im seriously gonna throw up\\n get that away from mee\",\r\n          });\r\n          if (loveMeter > 0) {\r\n            loveMeter--;\r\n          }\r\n        } else if (poopCount > 0) {\r\n          var randInt = randi(0, 2);\r\n          if (randInt == 1) {\r\n            addTextBubble({\r\n              message: \"theres like.. poop\\n right there. nasty\",\r\n            });\r\n          }\r\n          lastClickTime = time();\r\n        } else {\r\n          var randInt = randi(0, 3);\r\n          if (randInt == 1) {\r\n            addTextBubble({ message: \"im fucken fullll bro.\" });\r\n          }\r\n          lastClickTime = time();\r\n        }\r\n      }\r\n    } else {\r\n      if (time() - lastClickTime >= clickCooldown) {\r\n        // addTextBubble({ message: \"ya clickt me...\\nwat a nicee click >:3\" });\r\n        lastClickTime = time();\r\n\r\n        loveMeter++;\r\n\r\n        addParticles(\r\n          \"heart\",\r\n          \"/sprites/particles/effect_heart.png\",\r\n          mousePos().x,\r\n          mousePos().y\r\n        );\r\n\r\n        play(\"meow\", {\r\n          volume: 1, // set the volume to 50%\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  onKeyPress(\"a\", () => {\r\n    petIterator = (petIterator - 1 + petArray.length) % petArray.length;\r\n    pet.sprite = petArray[petIterator];\r\n  });\r\n  onKeyPress(\"d\", () => {\r\n    petIterator = (petIterator + 1) % 3;\r\n    pet.sprite = petArray[petIterator];\r\n  });\r\n\r\n  // Button event handlers\r\n\r\n  onClick(\"button_feed\", () => {\r\n    const apple = add([\r\n      pos(mousePos()),\r\n      sprite(\"apple\"),\r\n      anchor(\"center\"),\r\n      area(),\r\n      scale(0.5),\r\n      {\r\n        time: 0,\r\n      },\r\n      \"apple\",\r\n    ]);\r\n\r\n    buttonFeed.sprite = \"button_feed_pressed\";\r\n\r\n    play(\"click\", {\r\n      volume: 0.3,\r\n    });\r\n\r\n    appleIsOut = !appleIsOut;\r\n\r\n    onUpdate(() => {\r\n      apple.pos = mousePos();\r\n      if (!appleIsOut) {\r\n        apple.destroy();\r\n        buttonFeed.sprite = \"button_feed\";\r\n      }\r\n    });\r\n  });\r\n\r\n  onMousePress(\"right\", () => {\r\n    appleIsOut = false;\r\n  });\r\n\r\n  onClick(\"button_kill\", () => {\r\n    isDead = true;\r\n    buttonKill.sprite = \"button_kill_pressed\";\r\n    wait(0.2, () => {\r\n      buttonKill.sprite = \"button_kill\";\r\n    });\r\n  });\r\n\r\n  onClick(\"button_play\", () => {\r\n    buttonPlay.sprite = \"button_play_pressed\";\r\n\r\n    wait(0.2, () => {\r\n      buttonPlay.sprite = \"button_play\";\r\n    });\r\n\r\n    go(\"play\");\r\n  });\r\n});\r\n","import \"./utils/globalFunctions.js\";\r\nimport \"./kaplay.js\";\r\nimport \"./assets.js\";\r\nimport \"./scenes/play.js\";\r\nimport \"./scenes/pet-game.js\";\r\n\r\n// Load  play scene assets\r\n\r\n// go(\"main\");\r\ngo(\"play\");\r\nr;\r\n"],"names":["kaplay","overshoot","t","addParticles","name","path","x","y","data","loadedSpriteData","particleEmitter","addTextBubble","message","bubble","bubbleText","hexScale","hexPoints","getOffscreenPosition","side","explodeParticles","music","spawnEnemy","pos1","enemy","pet","difficulty","isAlive","spawnEnemy2","pos2","direction","enemy2","spawnEnemyProjectile","side1","side2","velocity","ammoCount","reloadCountdown","isReloading","reloadPosition","playerLives","target","adjustedTarget","angle","flamesArray","updateAmmoBar","f","i","flame","comboCountdown","comboCount","score","e","spawnRandomPoop","isDead","poop","poopCount","randInt","followVal","clickCooldown","petArray","lastClickTime","foodMeter","foodLimit","petIterator","appleIsOut","hasBeenFed","shrinkCountdown","beginShrinkTimer","isStarving","buttonFeed","buttonKill","buttonPlay","apple"],"mappings":"+uBAGiBA,EAAO,CACtB,MAAO,KACP,OAAQ,IACR,OAAQ,SAAS,cAAc,WAAW,EAC1C,UAAW,EACb,CAAC,ECNM,SAASC,EAAUC,EAAG,CAK3B,MAAO,GAAK,GAAM,KAAK,IAAIA,EAAI,EAAO,KAAK,GAAK,CAAC,EAAK,KAAK,IAAIA,EAAI,CAAK,CAC1E,CAKO,SAASC,EAAaC,EAAMC,EAAMC,EAAGC,EAAG,CAC7C,WAAWH,EAAMC,CAAI,EAAE,KAAMG,GAAS,CAEpC,IAAIC,EAAmB,UAAUL,CAAI,EAAE,KAEnCM,EAAkB,IAAI,CACxB,IAAIJ,EAAGC,CAAC,EACR,UACE,CACE,IAAK,GACL,SAAU,CAAC,EAAG,CAAC,EACf,MAAO,CAAC,GAAI,GAAG,EACf,aAAc,CAAC,KAAK,CAAC,EAAG,KAAK,EAAG,GAAG,CAAC,EACpC,QAAS,CAAC,EAAG,EAAG,EAChB,MAAO,CAAC,EAAG,EAAE,EACb,gBAAiB,CAAC,IAAK,GAAG,EAC1B,OAAQ,CAAC,EAAG,EACZ,UAAW,CAAC,EAAK,CAAG,EACpB,QAASE,EAAiB,IAC1B,MAAOA,EAAiB,MACzB,EACD,CACE,MAAO,IAAI,KAAK,KAAK,CAAC,EAAG,GAAI,EAAE,EAC/B,SAAU,EACV,KAAM,EACN,UAAW,IACX,OAAQ,EACT,CACF,CACP,CAAK,EAGDC,EAAgB,MAAM,IAAM,CAC1B,QAAQA,CAAe,CAC7B,CAAK,EAGDA,EAAgB,KAAK,CAAC,CAC1B,CAAG,CACH,CAEO,SAASC,EAAc,CAC5B,QAAAC,EAAU,GACV,EAAAN,EAAI,OAAM,EAAG,EACb,EAAAC,EAAI,SAAS,EAAI,GACnB,EAAI,GAAI,CACN,KAAK,OAAQ,CACX,OAAQ,CACZ,CAAG,EAED,MAAMM,EAAS,IAAI,CACjB,OAAO,QAAQ,EACf,IAAIP,EAAGC,CAAC,EACR,KAAK,IAAK,IAAK,CAAE,OAAQ,CAAC,CAAE,EAC5B,QAAQ,EAAG,KAAK,EAChB,MAAM,EAAG,EACT,QAAQ,CAAC,EACT,CACE,KAAM,EACN,UAAW,CACZ,CACL,CAAG,EAEKO,EAAaD,EAAO,IAAI,CAC5B,OAAO,QAAQ,EACf,KAAKD,EAAS,CACZ,KAAM,GACN,QAAS,CACf,CAAK,EACD,MAAM,KAAK,CACf,CAAG,EAEDC,EAAO,SAAS,IAAM,CACpBA,EAAO,MAAQ,KAEfA,EAAO,QAAQZ,EAAUY,EAAO,KAAO,CAAC,CAAC,EAErCA,EAAO,KAAO,IAChBA,EAAO,SAAW,KAClBC,EAAW,SAAW,GAAI,EAAG,EAEnC,CAAG,CACH,CAEA,MAAMC,EAAW,IAEJC,EAAY,CACvB,KAAK,KAAK,IAAI,CAAC,EAAG,KAAK,IAAI,CAAC,CAAC,EAAE,MAAMD,CAAQ,EAC7C,KAAK,KAAK,IAAI,KAAK,GAAK,CAAC,EAAG,KAAK,IAAI,KAAK,GAAK,CAAC,CAAC,EAAE,MAAMA,CAAQ,EACjE,KAAK,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,EAAG,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,CAAC,EAAE,MAC7DA,CACD,EACD,KAAK,KAAK,IAAI,KAAK,EAAE,EAAG,KAAK,IAAI,KAAK,EAAE,CAAC,EAAE,MAAMA,CAAQ,EACzD,KAAK,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,EAAG,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,CAAC,EAAE,MAC7DA,CACD,EACD,KAAK,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,EAAG,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,CAAC,EAAE,MAC7DA,CACD,CACH,EAEO,SAASE,EAAqBC,EAAO,KAAM,CAIhD,OAFmBA,IAAS,KAAOA,EAAO,MAAM,EAAG,CAAC,EAElC,CAChB,IAAK,GACH,OAAO,KAAK,KAAK,EAAG,MAAO,CAAA,EAAG,IAAO,EACvC,IAAK,GACH,OAAO,KAAK,KAAK,EAAG,MAAO,CAAA,EAAG,OAAM,EAAK,GAAM,EACjD,IAAK,GACH,OAAO,KAAK,KAAS,KAAK,EAAG,OAAQ,CAAA,CAAC,EACxC,IAAK,GACH,OAAO,KAAK,MAAK,EAAK,IAAQ,KAAK,EAAG,OAAQ,CAAA,CAAC,CAClD,CACH,CAEO,SAASC,EAAiBf,EAAMC,EAAMC,EAAGC,EAAG,CACjD,WAAWH,EAAMC,CAAI,EAAE,KAAMG,GAAS,CAEpC,IAAIC,EAAmB,UAAUL,CAAI,EAAE,KAEnCM,EAAkB,IAAI,CACxB,IAAIJ,EAAGC,CAAC,EACR,UACE,CACE,IAAK,GACL,SAAU,CAAC,EAAG,CAAC,EACf,MAAO,CAAC,IAAK,GAAG,EAChB,aAAc,CAAC,KAAK,CAAC,EAAG,KAAK,EAAG,GAAG,CAAC,EACpC,QAAS,CAAC,EAAG,EAAG,EAChB,MAAO,CAAC,EAAG,EAAE,EACb,gBAAiB,CAAC,IAAK,GAAG,EAC1B,OAAQ,CAAC,GAAK,GAAK,EAAG,EACtB,UAAW,CAAC,EAAK,CAAG,EACpB,QAASE,EAAiB,IAC1B,MAAOA,EAAiB,MACzB,EACD,CACE,MAAO,IAAI,KAAK,KAAK,CAAC,EAAG,GAAI,EAAE,EAC/B,SAAU,GACV,KAAM,EACN,UAAW,IACX,OAAQ,GACT,CACF,CACP,CAAK,EAGDC,EAAgB,MAAM,IAAM,CAC1B,QAAQA,CAAe,CAC7B,CAAK,EAGDA,EAAgB,KAAK,CAAC,CAC1B,CAAG,CACH,CCzKA,SAAS,IAAI,EACb,WAAW,SAAU,0BAA0B,EAC/C,WAAW,OAAQ,wBAAwB,EAC3C,WAAW,MAAO,uBAAuB,EACzC,WAAW,SAAU,qCAAqC,EAC1D,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,QAAS,4BAA4B,EAChD,WAAW,QAAS,4BAA4B,EAChD,WAAW,OAAQ,2BAA2B,EAC9C,WAAW,SAAU,sCAAsC,EAC3D,WAAW,QAAS,qCAAqC,EACzD,WAAW,QAAS,4BAA4B,EAChD,WAAW,SAAU,6BAA6B,EAClD,WAAW,WAAY,mCAAmC,EAC1D,WAAW,QAAS,4BAA4B,EAChD,WAAW,MAAO,mCAAmC,EAErD,UAAU,OAAQ,kBAAkB,EACpC,UAAU,QAAS,mBAAmB,EACtC,UAAU,MAAO,iBAAiB,EAClC,UAAU,OAAQ,kBAAkB,EACpC,UAAU,OAAQ,kBAAkB,EACpC,UAAU,OAAQ,kBAAkB,EACpC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,aAAc,2BAA2B,EACnD,UAAU,OAAQ,uBAAuB,EACzC,UAAU,QAAS,mBAAmB,EACtC,UAAU,OAAQ,sBAAsB,EACxC,UAAU,UAAW,qBAAqB,EAC1C,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EC/BxC,MAAM,OAAQ,IAAM,CAClB,MAAMU,EAAQ,KAAK,aAAc,CAAE,OAAQ,GAAI,CAAE,EACjD,OAAO,IAAM,CACX,WAAW,CACT,OAAQ,WACR,IAAK,OAAQ,EACb,OAAQ,QACd,CAAK,CACL,CAAG,EAED,SAASC,GAAa,CACpB,MAAMC,EAAOL,IACPM,EAAQ,IAAI,CAChB,IAAID,CAAI,EACR,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAK,CAAE,MAAO,IAAI,QAAQN,CAAS,CAAC,CAAE,EACtC,MAAM,EAAG,EACT,OAAO,CAAC,EAER,QAAS,EACT,CACE,KAAM,EACN,QAAS,OAAQ,EAAC,MAAO,CAC1B,EACD,QACA,cACN,CAAK,EAED,SAAS,IAAM,CACbO,EAAM,IAAMA,EAAM,IAAI,KAAKC,EAAI,IAAKC,EAAa,GAAI,CAC3D,CAAK,EAED,KAAK,KAAK,EAAG,EAAIA,EAAa,GAAG,EAAG,IAAM,CACpCC,GACFL,GAER,CAAK,CACF,CACD,SAASM,GAAc,CACrB,MAAMC,EAAOX,IAGPY,EADYL,EAAI,IAAI,MAAK,EAE5B,IAAII,CAAI,EACR,KAAM,EACN,MAAMH,EAAa,CAAC,EAEjBK,EAAS,IAAI,CACjB,IAAIF,CAAI,EACR,OAAO,QAAQ,EACf,OAAO,QAAQ,EACf,KAAK,CAAE,MAAO,IAAI,QAAQZ,CAAS,CAAC,CAAE,EACtC,MAAM,EAAG,EACT,OAAO,CAAC,EAER,QAAS,EACT,CACE,KAAM,EACN,SAAUa,CACX,EACD,QACA,cACN,CAAK,EAED,SAAS,IAAM,CACbC,EAAO,KAAKA,EAAO,QAAQ,CACjC,CAAK,EAED,KAAK,KAAK,EAAG,EAAIL,EAAa,GAAG,EAAG,IAAM,CACpCC,GACFC,GAER,CAAK,CACF,CAED,SAASI,GAAuB,CAC9B,MAAMC,EAAQ,MAAM,EAAG,CAAC,EACxB,IAAIC,EAAQ,MAAM,EAAG,CAAC,EACtB,KAAOA,IAAUD,GACfC,EAAQ,MAAM,EAAG,CAAC,EAGpB,MAAMX,EAAOL,EAAqBe,CAAK,EACjCJ,EAAOX,EAAqBgB,CAAK,EAEvC,KAAK,UAAW,CAAE,OAAQ,EAAK,CAAA,EACb,IAAI,CACpB,QAAQ,EAAG,EACX,CACE,KAAM,EACN,WAAY,EACZ,QAAS,GACT,MAAO,CACD,KAAK,SACP,SAAS,CACP,GAAIX,EACJ,GAAIM,EACJ,MAAO,GACP,MAAO,IAAI,IAAK,IAAK,GAAG,CACtC,CAAa,CAEJ,EACD,QAAS,CACP,KAAK,MAAQ,KAGT,KAAK,MAAQ,KACf,KAAK,QAAU,CAAC,KAAK,QACrB,KAAK,KAAO,EAEP,KAAK,SACR,KAAK,aAIH,KAAK,YAAc,GACrB,QAAQ,IAAI,EAGjB,CACF,CACP,CAAK,EAYD,MAAMM,EAFMN,EAAK,IAAIN,CAAI,EAAE,KAAI,EAEV,MADP,GACkB,EAGhC,KAAK,GAAK,IAAM,CACU,IAAI,CAC1B,IAAIA,CAAI,EACR,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAK,CAAE,MAAO,IAAI,QAAQN,CAAS,CAAC,CAAE,EACtC,MAAM,GAAI,EACV,OAAQ,EACR,CACE,QAAS,CACP,KAAK,KAAKkB,CAAQ,EAClB,KAAK,OAAS,GAAI,EAAG,GACtB,CACF,EACD,OACR,CAAO,CACP,CAAK,EAID,KAAK,KAAK,EAAG,EAAIT,EAAa,GAAG,EAAG,IAAM,CACpCC,GACFK,GAER,CAAK,CACF,CACD,IAAIN,EAAa,EACbU,EAAY,GACZC,EAAkB,GAClBC,EAAc,GACdC,EACAC,EAAc,EACdb,EAAU,GAEd,MAAMF,EAAM,IAAI,CACd,IAAI,OAAM,CAAE,EACZ,OAAO,QAAQ,EACf,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,OAAO,CAAC,EACR,QAAS,EACT,CACE,KAAM,EACN,QAAS,OAAQ,EAAC,MAAO,CAC1B,EACD,KACJ,CAAG,EAEDH,IACAM,IACAI,IAEA,SAAS,IAAM,CAEb,GADAN,GAAc,GAAE,EACXY,EAaHb,EAAI,IAAMA,EAAI,IAAI,KAAKc,EAAgB,EAAG,MAb1B,CAChB,MAAME,EAAS,WACTX,EAAYW,EAAO,IAAIhB,EAAI,GAAG,EAAE,OAEhCiB,EAAiBD,EAAO,IAAIX,EAAU,MAD3B,GACyC,CAAC,EAE3DL,EAAI,IAAMA,EAAI,IAAI,KAAKiB,EAAgB,EAAG,EAE1C,MAAMC,EAAQ,KAAK,MAAMb,EAAU,EAAGA,EAAU,CAAC,EACjDL,EAAI,MAAQ,QAAQkB,CAAK,EAEzBlB,EAAI,QAAUA,EAAI,IAAI,MAAK,CACjC,CAGA,CAAG,EAED,IAAImB,EAAc,CAAA,EAElB,SAASC,GAAgB,CACvB,UAAWC,KAAKF,EACdE,EAAE,QAAO,EAEXF,EAAc,CAAA,EAEd,QAASG,EAAI,EAAGA,EAAIX,EAAWW,IAAK,CAClC,MAAMC,EAAQ,IAAI,CAChB,IAAI,MAAK,EAAK,IAAMD,EAAI,GAAI,OAAQ,EAAG,GAAG,EAC1C,OAAO,OAAO,EACd,MAAM,EAAG,EACT,QAAQ,CAAC,CACjB,CAAO,EAEDH,EAAYG,CAAC,EAAIC,CAClB,CAED,MAAM,IAAIJ,EAAY,MAAM,CAC7B,CAEGjB,GACF,QAAQ,IAAM,CAEZ,GADAkB,IACIT,EAAY,GAAK,CAACE,EAAa,CACjC,KAAK,SAAU,CAAE,OAAQ,EAAK,CAAA,EAC9B,MAAMU,EAAQ,IAAI,CAChB,IAAIvB,EAAI,GAAG,EACX,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,OAAO,CAAC,EACR,KAAKA,EAAI,MAAO,IAAI,EACpB,OACV,CAAS,EAED,KAAK,EAAG,IAAM,CACZuB,EAAM,QAAO,CACvB,CAAS,EAEDZ,GACD,CACP,CAAK,EAGHX,EAAI,SAAS,IAAM,CACba,IACFD,GAAmB,GAAE,EACjBA,GAAmB,IACrBC,EAAc,GACdD,EAAkB,GAClBD,EAAY,GACZS,KAGR,CAAG,EAED,WAAW,IAAK,IAAM,CACfP,IACHC,EAAiB,SAAQ,EACzBD,EAAc,GACd,KAAK,QAAQ,EAEnB,CAAG,EAED,IAAIW,EAAiB,GACjBC,EAAa,EAEjB,UAAU,MAAO,QAAS,IAAM,CAC9B,KAAK,MAAM,EACX,QACAV,IACIA,GAAe,GACjBnB,EAAM,OAAS,GACfT,EAAc,CACZ,QAAS,oBACT,EAAGa,EAAI,IAAI,EACX,EAAGA,EAAI,IAAI,CACnB,CAAO,EACDA,EAAI,QAAO,EACXE,EAAU,IAEVf,EAAc,CAAE,QAAS,SAAU,EAAGa,EAAI,IAAI,EAAG,EAAGA,EAAI,IAAI,CAAG,CAAA,CAErE,CAAG,EAED,IAAI0B,EAAQ,EACRpC,EAEJ,UAAU,eAAgB,QAAS,CAAC+B,EAAGM,IAAM,CA+B3C,OA9BAN,EAAE,QAAO,EACTM,EAAE,QAAO,EACT,KAAK,QAAS,CAAE,OAAQ,EAAK,CAAA,EAC7B,KAAK,GAAK,IAAM,CACd,KAAK,OAAQ,CAAE,OAAQ,EAAK,CAAA,CAClC,CAAK,EAEDhC,EACE,MACA,oCACA0B,EAAE,IAAI,EACNA,EAAE,IAAI,CACZ,EACI,QAEAI,IACAD,EAAiB,GACblC,GACFA,EAAW,QAAO,EAEpBA,EAAaD,EAAO,IAAI,CACtB,IAAI,GAAI,EAAE,EACV,MAAM,CAAC,EACP,KAAK,UAAUqC,CAAK,GAAI,CACtB,KAAM,GACN,QAAS,CACjB,CAAO,EACD,MAAM,KAAK,CACjB,CAAK,EAEOD,EAAU,CAChB,IAAK,GACH,KAAK,QAAQ,EACb,MACF,IAAK,GACH,KAAK,QAAQ,EAEb,MACF,IAAK,GACH,KAAK,QAAQ,EACb,MACF,IAAK,GACH,KAAK,QAAQ,EACb,MACF,IAAK,GACH,KAAK,QAAQ,EACb,KACH,CAEDC,GAASD,EAAa,EAC1B,CAAG,EAED,SAAS,IAAM,CACTA,EAAa,IACfD,GAAkB,GAAE,EAChBA,GAAkB,IACpBC,EAAa,EACbD,EAAiB,IAGzB,CAAG,EAKD,MAAMnC,EAAS,IAAI,CACjB,IAAI,GAAI,EAAE,EACV,KAAK,IAAK,IAAK,CAAE,OAAQ,CAAC,CAAE,EAC5B,QAAQ,EAAG,KAAK,EAChB,MAAM,EAAG,EACT,QAAQ,CAAC,EACT,CACE,KAAM,EACN,UAAW,CACZ,CACL,CAAG,EAKD,WAAW,IAAK,IAAM,CACpBO,EAAM,KAAI,EACV,GAAG,MAAM,CACb,CAAG,EAED,WAAW,SAAU,IAAM,CACzBA,EAAM,KAAK,YAAY,EACvB,GAAG,MAAM,CACb,CAAG,CACH,CAAC,EC3YD,MAAM,OAAQ,IAAM,CAClB,SAASgC,GAAkB,CACpBC,GACH,KAAK,KAAK,EAAG,EAAE,EAAG,IAAM,CACtB,MAAMC,EAAO,IAAI,CACf,IAAI,OAAQ,EAAC,EAAI,KAAK,EAAG,GAAG,EAAG,OAAQ,EAAC,EAAI,KAAK,EAAG,GAAG,CAAC,EACxD,OAAO,MAAM,EACb,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,MACV,CAAS,EAEDC,IAEAD,EAAK,QAAQ,IAAM,CACjB,IAAIE,EAAU,MAAM,EAAG,EAAE,EACrBA,GAAW,GACb7C,EAAc,CACZ,QAAS;AAAA,uBACvB,CAAa,EAGH,KAAK,MAAM,EACXR,EACE,OACA,qCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACvB,EAEUmD,EAAK,QAAO,EAEZC,GACV,CAAS,EAGDH,GACR,CAAO,CAEJ,CAED,MAAMK,EAAY,GACZC,EAAgB,GAChBC,EAAW,CAAC,SAAU,OAAQ,KAAK,EAGzC,IAAIC,EAAgB,EAChBC,EAAY,GACZC,EAAY,IACZC,EAAc,EACdC,EAAa,GACbC,EAAa,GACbC,EAAkB,EAClBC,EAAmB,GACnBC,EAAa,GACbf,EAAS,GAETE,EAAY,EAKhB,OAAO,IAAM,CACX,WAAW,CACT,OAAQ,SACR,IAAK,OAAQ,EACb,OAAQ,QACd,CAAK,CACL,CAAG,EAED,MAAM/B,EAAM,IAAI,CACd,IAAI,OAAM,CAAE,EACZ,OAAO,QAAQ,EACf,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,QAAS,EACT,CACE,KAAM,CACP,EACD,KACJ,CAAG,EAIK6C,EAAa,IAAI,CACrB,IAAI,OAAM,EAAG,EAAG,OAAQ,EAAC,EAAI,GAAG,EAChC,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAEKC,EAAa,IAAI,CACrB,IAAI,OAAM,EAAG,EAAI,IAAK,OAAQ,EAAC,EAAI,GAAG,EACtC,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAEKC,EAAa,IAAI,CACrB,IAAI,OAAM,EAAG,EAAI,IAAK,OAAQ,EAAC,EAAI,GAAG,EACtC,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAED,KAAKX,EAAgB,GAAK,IAAM,CAC9BjD,EAAc,CAAE,QAAS;AAAA,2BAA6C,CAAE,CAC5E,CAAG,EAED,KAAKiD,EAAgB,GAAK,IAAM,CAC9BjD,EAAc,CAAE,QAAS;AAAA,2BAA6C,CAAE,CAC5E,CAAG,EAEDa,EAAI,SAAS,IAAM,CAEfA,EAAI,IAAMA,EAAI,IAAI,KAChB,KACE,OAAQ,EAAC,GAAK,SAAQ,EAAG,EAAI,OAAM,EAAG,GAAKiC,EAC3C,OAAQ,EAAC,GAAK,SAAQ,EAAG,EAAI,OAAM,EAAG,GAAKA,CAC5C,EACD,GACR,EAEMjC,EAAI,MAAQ,KACZA,EAAI,IAAI,GAAK,KAAK,IAAIA,EAAI,KAAO,CAAC,EAElCqC,GAAa,GAAE,EAEXI,IACFC,GAAmB,GAAE,EACjBA,GAAmB,GAAKL,EAAYC,IACtCI,EAAkB,EAClBD,EAAa,GACbE,EAAmB,KAKrBA,GAAoBN,EAAYC,IAClCtC,EAAI,QAAQ,GAAI,EACZA,EAAI,OAAS,KAAK,GAAK,EAAG,IAAG2C,EAAmB,KAGlDN,EAAY,IAAM,CAACO,GACrBzD,EAAc,CAAE,QAAS;AAAA,cAA4B,CAAE,EACvDyD,EAAa,IACJP,EAAY,IAAMO,IAC3BA,EAAa,KAGXf,GAAWQ,GAAa,GAAK,CAACR,KAChC,QACA1C,EAAc,CAAE,QAAS,gBAAgB,CAAE,EAC3C0C,EAAS,GACT7B,EAAI,QAAO,EACG,IAAI,CAChB,IAAI,OAAM,CAAE,EACZ,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,QAAS,EACT,CACE,KAAM,CACP,EACD,OACR,CAAO,EAED,KAAK,OAAQ,CACX,OAAQ,EAChB,CAAO,EAEP,CAAG,EAED4B,IAEA5B,EAAI,QAAQ,IAAM,CAChB,GAAIwC,GACF,GAAI,KAAI,EAAKJ,GAAiBF,EAC5B,GAAI,CAACH,GAAaM,EAAYC,EAAW,CACvC,IAAIN,EAAU,MAAM,EAAG,EAAE,EACrBA,GAAW,GACb7C,EAAc,CAAE,QAAS,eAAe,CAAE,EAG5CR,EACE,OACA,qCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACvB,EAEU,KAAK,MAAO,CACV,OAAQ,EACpB,CAAW,EAEDqB,EAAI,QAAQ,IAAI,EAEhBwC,EAAa,GAEbE,EAAkB,EAClBD,EAAa,GAERZ,IACHQ,GAAa,GAEhB,SAAUN,EAAY,GAAKM,GAAaC,EACvC3D,EACE,SACA,uCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACvB,EACUQ,EAAc,CACZ,QAAS;AAAA,wBACrB,CAAW,UAIQ4C,EAAY,EAAG,CACxB,IAAIC,EAAU,MAAM,EAAG,CAAC,EACpBA,GAAW,GACb7C,EAAc,CACZ,QAAS;AAAA,oBACvB,CAAa,EAEHiD,EAAgB,KAAI,CAC9B,KAAe,CACL,IAAIJ,EAAU,MAAM,EAAG,CAAC,EACpBA,GAAW,GACb7C,EAAc,CAAE,QAAS,uBAAuB,CAAE,EAEpDiD,EAAgB,KAAI,CACrB,OAGC,KAAI,EAAKA,GAAiBF,IAE5BE,EAAgB,KAAI,EAIpBzD,EACE,QACA,sCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACrB,EAEQ,KAAK,OAAQ,CACX,OAAQ,CAClB,CAAS,EAGT,CAAG,EAED,WAAW,IAAK,IAAM,CACpB4D,GAAeA,EAAc,EAAIJ,EAAS,QAAUA,EAAS,OAC7DnC,EAAI,OAASmC,EAASI,CAAW,CACrC,CAAG,EACD,WAAW,IAAK,IAAM,CACpBA,GAAeA,EAAc,GAAK,EAClCvC,EAAI,OAASmC,EAASI,CAAW,CACrC,CAAG,EAID,QAAQ,cAAe,IAAM,CAC3B,MAAMS,EAAQ,IAAI,CAChB,IAAI,SAAQ,CAAE,EACd,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,OACN,CAAK,EAEDH,EAAW,OAAS,sBAEpB,KAAK,QAAS,CACZ,OAAQ,EACd,CAAK,EAEDL,EAAa,CAACA,EAEd,SAAS,IAAM,CACbQ,EAAM,IAAM,WACPR,IACHQ,EAAM,QAAO,EACbH,EAAW,OAAS,cAE5B,CAAK,CACL,CAAG,EAED,aAAa,QAAS,IAAM,CAC1BL,EAAa,EACjB,CAAG,EAED,QAAQ,cAAe,IAAM,CAC3BX,EAAS,GACTiB,EAAW,OAAS,sBACpB,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,aAC1B,CAAK,CACL,CAAG,EAED,QAAQ,cAAe,IAAM,CAC3BC,EAAW,OAAS,sBAEpB,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,aAC1B,CAAK,EAED,GAAG,MAAM,CACb,CAAG,CACH,CAAC,EC5UD,GAAG,MAAM,EACT"}