{"version":3,"file":"index-D_-2wZgm.js","sources":["../../src/kaplay.js","../../src/utils/globalFunctions.js","../../src/assets.js","../../src/scenes/play.js","../../src/scenes/pet-game.js","../../src/scenes/shop.js","../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\r\nimport \"kaplay/global\"; // uncomment if you want to use without the k. prefix\r\n\r\nexport const k = kaplay({\r\n  width: 1280,\r\n  height: 720,\r\n  canvas: document.querySelector(\"#mycanvas\"),\r\n  letterbox: true,\r\n});\r\n","import \"../kaplay.js\";\r\n\r\nexport function overshoot(t) {\r\n  const amp = 0.7;\r\n  const freq = 2;\r\n  const decay = 4;\r\n\r\n  return 1 + (amp * Math.sin(t * freq * Math.PI * 2)) / Math.exp(t * decay);\r\n}\r\n\r\nexport function easeOutQuint(x) {\r\n  return 1 - Math.pow(1 - x, 5);\r\n}\r\nexport function addParticles(name, path, x, y) {\r\n  loadSprite(name, path).then((data) => {\r\n    // Fun fact: the data parameter passed from the promise is the same as getSprite().data\r\n    let loadedSpriteData = getSprite(name).data;\r\n\r\n    let particleEmitter = add([\r\n      pos(x, y),\r\n      particles(\r\n        {\r\n          max: 20, // the max amount of particles generated from this emitter at one time\r\n          lifeTime: [2, 5], // how long the particles last before being destroyed\r\n          speed: [50, 200], // how fast the particles are moving\r\n          acceleration: [vec2(0), vec2(0, -10)], // changes the speed of the particle over its lifetime\r\n          damping: [0, 0.5], // slows down the particle over its lifetime\r\n          angle: [0, 40], // the rotation of each particle\r\n          angularVelocity: [-20, -20], // how fast each particle should be rotating\r\n          scales: [0.1], // how large the particle is over its lifetime\r\n          opacities: [1.0, 0.0], // the opacity of the particle over its lifetime\r\n          texture: loadedSpriteData.tex, // texture of the sprite\r\n          quads: loadedSpriteData.frames, // to tell whe emitter what frames of the sprite to use\r\n        },\r\n        {\r\n          shape: new Rect(vec2(0), 32, 32), // the area where particles should be emitted from (can be empty)\r\n          lifetime: 5, // how long the emitter should last\r\n          rate: 5, // the rate at which particles are emitted\r\n          direction: -90, // the direction where particles should be traveling\r\n          spread: 20, // variance in the direction where particles should be traveling\r\n        }\r\n      ),\r\n    ]);\r\n\r\n    // .onEnd is called when the emitter's lifetime (in this example 5 seconds), has expired.\r\n    particleEmitter.onEnd(() => {\r\n      destroy(particleEmitter);\r\n    });\r\n\r\n    // Emit Particles at runtime\r\n    particleEmitter.emit(5);\r\n  });\r\n}\r\n\r\nexport function addTextBubble({\r\n  message = \"\",\r\n  x = center().x,\r\n  y = center().y - 200,\r\n} = {}) {\r\n  if (!isDead) {\r\n    play(\"beep\", {\r\n      volume: 1, // set the volume to 50%\r\n    });\r\n\r\n    var newMessage = \"\";\r\n    const maxCharPerLine = 25;\r\n    var lineStart = 0;\r\n\r\n    while (lineStart < message.length) {\r\n      // Find the next cutoff point\r\n      let cutoff = lineStart + maxCharPerLine;\r\n      if (cutoff >= message.length) {\r\n        newMessage += message.substring(lineStart);\r\n        break;\r\n      }\r\n      // Find the last space before cutoff\r\n      let lastSpace = message.lastIndexOf(\" \", cutoff);\r\n      if (lastSpace <= lineStart) lastSpace = cutoff; // No space found, hard break\r\n      newMessage += message.substring(lineStart, lastSpace) + \"\\n\";\r\n      lineStart = lastSpace + 1;\r\n    }\r\n\r\n    const bubble = add([\r\n      anchor(\"center\"),\r\n      pos(x, y),\r\n      rect(400, 100, { radius: 8 }),\r\n      outline(4, BLACK),\r\n      scale(0.1),\r\n      opacity(1),\r\n      {\r\n        time: 0,\r\n        scaleTime: 0,\r\n      },\r\n    ]);\r\n\r\n    const bubbleText = bubble.add([\r\n      anchor(\"center\"),\r\n      text(newMessage, {\r\n        size: 26,\r\n        opacity: 1,\r\n      }),\r\n      color(BLACK),\r\n    ]);\r\n\r\n    bubble.onUpdate(() => {\r\n      bubble.time += dt();\r\n\r\n      bubble.scaleTo(overshoot(bubble.time * 2));\r\n\r\n      if (bubble.time > 2) {\r\n        bubble.opacity -= dt();\r\n        bubbleText.opacity -= dt() / 2;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst hexScale = 250;\r\n\r\nexport const hexPoints = [\r\n  vec2(Math.cos(0), Math.sin(0)).scale(hexScale),\r\n  vec2(Math.cos(Math.PI / 3), Math.sin(Math.PI / 3)).scale(hexScale),\r\n  vec2(Math.cos((2 * Math.PI) / 3), Math.sin((2 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n  vec2(Math.cos(Math.PI), Math.sin(Math.PI)).scale(hexScale),\r\n  vec2(Math.cos((4 * Math.PI) / 3), Math.sin((4 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n  vec2(Math.cos((5 * Math.PI) / 3), Math.sin((5 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n];\r\n\r\nexport function getOffscreenPosition(side = null) {\r\n  const margin = 100;\r\n  const chosenSide = side !== null ? side : randi(0, 4);\r\n\r\n  switch (chosenSide) {\r\n    case 0:\r\n      return vec2(rand(0, width()), -margin); // top\r\n    case 1:\r\n      return vec2(rand(0, width()), height() + margin); // bottom\r\n    case 2:\r\n      return vec2(-margin, rand(0, height())); // left\r\n    case 3:\r\n      return vec2(width() + margin, rand(0, height())); // right\r\n  }\r\n}\r\n\r\nexport function explodeParticles(name, path, x, y) {\r\n  loadSprite(name, path).then((data) => {\r\n    // Fun fact: the data parameter passed from the promise is the same as getSprite().data\r\n    let loadedSpriteData = getSprite(name).data;\r\n\r\n    let particleEmitter = add([\r\n      pos(x, y),\r\n      particles(\r\n        {\r\n          max: 20, // the max amount of particles generated from this emitter at one time\r\n          lifeTime: [2, 5], // how long the particles last before being destroyed\r\n          speed: [200, 500], // how fast the particles are moving\r\n          acceleration: [vec2(0), vec2(0, -10)], // changes the speed of the particle over its lifetime\r\n          damping: [0, 0.5], // slows down the particle over its lifetime\r\n          angle: [0, 40], // the rotation of each particle\r\n          angularVelocity: [-20, -20], // how fast each particle should be rotating\r\n          scales: [0.3, 0.2, 0.1], // how large the particle is over its lifetime\r\n          opacities: [1.0, 0.0], // the opacity of the particle over its lifetime\r\n          texture: loadedSpriteData.tex, // texture of the sprite\r\n          quads: loadedSpriteData.frames, // to tell whe emitter what frames of the sprite to use\r\n        },\r\n        {\r\n          shape: new Rect(vec2(0), 32, 32), // the area where particles should be emitted from (can be empty)\r\n          lifetime: 0.5, // how long the emitter should last\r\n          rate: 5, // the rate at which particles are emitted\r\n          direction: -90, // the direction where particles should be traveling\r\n          spread: 360, // variance in the direction where particles should be traveling\r\n        }\r\n      ),\r\n    ]);\r\n\r\n    // .onEnd is called when the emitter's lifetime (in this example 5 seconds), has expired.\r\n    particleEmitter.onEnd(() => {\r\n      destroy(particleEmitter);\r\n    });\r\n\r\n    // Emit Particles at runtime\r\n    particleEmitter.emit(5);\r\n  });\r\n}\r\n\r\nexport let isDead = false;\r\nexport function setIsDead(val) {\r\n  isDead = val;\r\n}\r\n\r\nexport let munny = 0;\r\n\r\nexport function setMunny(val) {\r\n  munny = val;\r\n}\r\n\r\nexport function updateMunnyBubbleText() {\r\n  const munnyBubble = add([\r\n    pos(10, 10),\r\n    rect(400, 100, { radius: 8 }),\r\n    outline(4, BLACK),\r\n    scale(0.5),\r\n    opacity(1),\r\n    {\r\n      time: 0,\r\n      scaleTime: 0,\r\n    },\r\n  ]);\r\n  munnyBubble.add([\r\n    pos(10, 10),\r\n    scale(2),\r\n    text(`munny: ${munny}`, {\r\n      size: 26,\r\n      opacity: 1,\r\n    }),\r\n    color(BLACK),\r\n  ]);\r\n}\r\n\r\nexport const shopItems = [\r\n  { name: \"guy\", price: 50, sprite: \"logo\", bought: false },\r\n  { name: \"werm\", price: 100, sprite: \"werm\", bought: false },\r\n  { name: \"eye\", price: 200, sprite: \"eye\", bought: false },\r\n];\r\n\r\nexport var petType = \"nublin\";\r\nexport function setPetType(type) {\r\n  petType = type;\r\n}\r\n","loadRoot(\"./\");\r\nloadSprite(\"nublin\", \"/sprites/pets/nublin.png\");\r\nloadSprite(\"werm\", \"/sprites/pets/werm.png\");\r\nloadSprite(\"eye\", \"/sprites/pets/eye.png\");\r\nloadSprite(\"bg_day\", \"/sprites/backgrounds/morning_bg.png\");\r\nloadSprite(\"button_feed\", \"/sprites/buttons/button_feed.png\");\r\nloadSprite(\"button_feed_pressed\", \"/sprites/buttons/button_feed_pushed.png\");\r\nloadSprite(\"button_kill\", \"/sprites/buttons/button_kill.png\");\r\nloadSprite(\"button_kill_pressed\", \"/sprites/buttons/button_kill_pushed.png\");\r\nloadSprite(\"button_play\", \"/sprites/buttons/button_play.png\");\r\nloadSprite(\"button_play_pressed\", \"/sprites/buttons/button_play_pushed.png\");\r\nloadSprite(\"button_shop\", \"/sprites/buttons/button_shop.png\");\r\nloadSprite(\"button_shop_pressed\", \"/sprites/buttons/button_shop_pushed.png\");\r\nloadSprite(\"apple\", \"/sprites/objects/apple.png\");\r\nloadSprite(\"grave\", \"/sprites/objects/grave.png\");\r\nloadSprite(\"poop\", \"/sprites/objects/poop.png\");\r\nloadSprite(\"poison\", \"/sprites/particles/effect_poison.png\");\r\nloadSprite(\"flame\", \"/sprites/particles/effect_flame.png\");\r\nloadSprite(\"heart\", \"/sprites/particles/effect_heart.png\");\r\nloadSprite(\"enemy\", \"/sprites/objects/enemy.png\");\r\nloadSprite(\"enemy2\", \"/sprites/objects/enemy2.png\");\r\nloadSprite(\"bg_night\", \"/sprites/backgrounds/night_bg.png\");\r\nloadSprite(\"sword\", \"/sprites/objects/sword.png\");\r\nloadSprite(\"hit\", \"/sprites/particles/effect_hit.png\");\r\nloadSprite(\"ammo\", \"/sprites/objects/ammo_icon.png\");\r\nloadSprite(\"wizard\", \"/sprites/wizard.png\");\r\nloadSprite(\"button_exit\", \"/sprites/buttons/button_exit.png\");\r\nloadSprite(\"button_exit_pushed\", \"/sprites/buttons/button_exit_pushed.png\");\r\nloadSprite(\"guy\", \"/sprites/craig-logo.png\");\r\n\r\nloadSound(\"beep\", \"/sounds/beep.mp3\");\r\nloadSound(\"click\", \"/sounds/click.mp3\");\r\nloadSound(\"eat\", \"/sounds/eat.mp3\");\r\nloadSound(\"meow\", \"/sounds/meow.wav\");\r\nloadSound(\"bong\", \"/sounds/bell.mp3\");\r\nloadSound(\"fart\", \"/sounds/fart.mp3\");\r\nloadSound(\"bullet\", \"/sounds/bullet.wav\");\r\nloadSound(\"reload\", \"/sounds/reload.mp3\");\r\nloadSound(\"night_song\", \"/sounds/skeleton_song.mp3\");\r\nloadSound(\"hurt\", \"/sounds/snd_hurt1.wav\");\r\nloadSound(\"punch\", \"/sounds/punch.wav\");\r\nloadSound(\"bell\", \"/sounds/snd_bell.wav\");\r\nloadSound(\"warning\", \"/sounds/warning.mp3\");\r\nloadSound(\"combo1\", \"/sounds/combo1.mp3\");\r\nloadSound(\"combo2\", \"/sounds/combo2.mp3\");\r\nloadSound(\"combo3\", \"/sounds/combo3.mp3\");\r\nloadSound(\"combo4\", \"/sounds/combo4.mp3\");\r\nloadSound(\"combo5\", \"/sounds/combo5.mp3\");\r\nloadSound(\"empty\", \"/sounds/empty.mp3\");\r\nloadSound(\"dash\", \"/sounds/snd_bombsplosion.wav\");\r\nloadSound(\"buy\", \"/sounds/buy.wav\");\r\n","import \"../kaplay.js\";\r\nimport {\r\n  addTextBubble,\r\n  addParticles,\r\n  munny,\r\n  petType,\r\n  setMunny,\r\n  updateMunnyBubbleText,\r\n} from \"../utils/globalFunctions.js\";\r\n\r\nscene(\"play\", () => {\r\n  const music = play(\"night_song\", { volume: 0.15 });\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_day\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  var difficulty = 0;\r\n  var playerLives = 3;\r\n\r\n  function spawnApple() {\r\n    const apple = add([\r\n      pos(rand(0, width()), -30),\r\n      sprite(\"apple\"),\r\n      anchor(\"center\"),\r\n      area(),\r\n      scale(0.2),\r\n      move(DOWN, 200),\r\n      \"apple\",\r\n    ]);\r\n\r\n    wait(rand(0, 3 - difficulty), spawnApple);\r\n  }\r\n\r\n  const pet = add([\r\n    pos(center().x, height() - 100),\r\n    sprite(petType),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.2),\r\n    rotate(0), // Enable rotation\r\n    animate(),\r\n    {\r\n      time: 0,\r\n      prevPos: center().clone(),\r\n    },\r\n    \"pet\",\r\n  ]);\r\n\r\n  onUpdate(() => {\r\n    const target = mousePos();\r\n    const directionX = target.x - pet.pos.x;\r\n    const stopDist = 0;\r\n\r\n    const adjustedTargetX =\r\n      target.x -\r\n      Math.sign(directionX) * Math.min(Math.abs(directionX), stopDist);\r\n\r\n    pet.pos.x = pet.pos.x + (adjustedTargetX - pet.pos.x) * 0.1;\r\n\r\n    pet.angle = directionX / 20;\r\n\r\n    pet.prevPos = pet.pos.clone();\r\n  });\r\n\r\n  var healthArray = [];\r\n\r\n  function updateHealthBar() {\r\n    for (const h of healthArray) {\r\n      h.destroy();\r\n    }\r\n    healthArray = [];\r\n\r\n    for (var i = 0; i < playerLives; i++) {\r\n      const health = add([\r\n        pos(160 - i * 70, 70),\r\n        sprite(\"heart\"),\r\n        scale(0.2),\r\n        opacity(1),\r\n      ]);\r\n\r\n      healthArray[i] = health;\r\n    }\r\n  }\r\n  var score = 0;\r\n  var scorePos = vec2(240, 10);\r\n  var scoreBubbleText;\r\n  var munnyEarned = 0;\r\n\r\n  onCollide(\"apple\", \"pet\", (a, p) => {\r\n    a.destroy();\r\n\r\n    score += 10;\r\n\r\n    play(\"eat\");\r\n\r\n    addParticles(\"hit\", \"/sprites/particles/effect_heal.png\", a.pos.x, a.pos.y);\r\n    shake();\r\n\r\n    if (scoreBubbleText) {\r\n      scoreBubbleText.destroy();\r\n    }\r\n    scoreBubbleText = scoreBubble.add([\r\n      pos(10, 10),\r\n      scale(2),\r\n      text(`score: ${score}`, {\r\n        size: 26,\r\n        opacity: 1,\r\n      }),\r\n      color(BLACK),\r\n    ]);\r\n\r\n    if (score % 100 === 0) {\r\n      wait(0.5, () => {\r\n        play(\"bell\");\r\n        setMunny(munny + 10);\r\n        updateMunnyBubbleText();\r\n        munnyEarned += 10;\r\n      });\r\n    }\r\n  });\r\n\r\n  onUpdate(\"apple\", (a) => {\r\n    if (a.pos.y > height() + 30) {\r\n      a.destroy();\r\n\r\n      playerLives -= 1;\r\n      updateHealthBar();\r\n\r\n      // Optional: play a sound or shake\r\n      play(\"hurt\");\r\n      shake();\r\n\r\n      // Optional: end game if out of lives\r\n      if (playerLives <= 0) {\r\n        pet.destroy();\r\n        music.stop();\r\n        const deathBubble = add([\r\n          anchor(\"center\"),\r\n          pos(center()),\r\n          rect(700, 300, { radius: 8 }),\r\n          outline(4, BLACK),\r\n          scale(0.5),\r\n          opacity(1),\r\n          {\r\n            time: 0,\r\n            scaleTime: 0,\r\n          },\r\n        ]);\r\n\r\n        const deathBubbleText = deathBubble.add([\r\n          anchor(\"center\"),\r\n          scale(2),\r\n          text(`game over\\nur score: ${score}\\nmunny earned: ${munnyEarned}`, {\r\n            size: 26,\r\n            opacity: 1,\r\n          }),\r\n          color(BLACK),\r\n        ]);\r\n\r\n        wait(2, () => {\r\n          go(\"main\"); // or any other scene you want to go to\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  onUpdate(() => {\r\n    difficulty += dt() * 0.04;\r\n    difficulty = Math.min(difficulty, 2.5);\r\n  });\r\n\r\n  // Score bubble\r\n  const scoreBubble = add([\r\n    pos(scorePos),\r\n    rect(400, 100, { radius: 8 }),\r\n    outline(4, BLACK),\r\n    scale(0.5),\r\n    opacity(1),\r\n    {\r\n      time: 0,\r\n      scaleTime: 0,\r\n    },\r\n  ]);\r\n\r\n  scoreBubbleText = scoreBubble.add([\r\n    pos(10, 10),\r\n    scale(2),\r\n    text(`Score: ${score}`, {\r\n      size: 26,\r\n      opacity: 1,\r\n    }),\r\n    color(BLACK),\r\n  ]);\r\n\r\n  updateHealthBar();\r\n  spawnApple();\r\n  updateMunnyBubbleText();\r\n\r\n  // FOR DEBUGGING\r\n  // onKeyPress(\"p\", () => {\r\n  //   music.stop();\r\n  //   go(\"play\");\r\n  // });\r\n\r\n  const buttonShop = add([\r\n    pos(width() - 100, 60),\r\n    sprite(\"button_exit\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.7),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_exit\",\r\n  ]);\r\n\r\n  onClick(\"button_exit\", () => {\r\n    play(\"click\");\r\n    buttonShop.sprite = \"button_exit_pushed\";\r\n\r\n    wait(0.2, () => {\r\n      buttonShop.sprite = \"button_exit\";\r\n      music.stop(\"night_song\");\r\n      go(\"main\");\r\n    });\r\n  });\r\n});\r\n","import \"../kaplay.js\";\r\nimport {\r\n  addParticles,\r\n  addTextBubble,\r\n  isDead,\r\n  setIsDead,\r\n  updateMunnyBubbleText,\r\n  petType,\r\n  setMunny,\r\n  setPetType,\r\n  shopItems,\r\n} from \"../utils/globalFunctions.js\";\r\n\r\nconst randomMessages = [\r\n  \"wah wah wah!!\",\r\n  \"u listen to da strokes?\",\r\n  \"*sniff* *sniff* did u shower?\",\r\n  \"i shure hope craig getshired lol\",\r\n  \"meow\",\r\n  \"i love u\",\r\n  \"heh hehhhhh...\",\r\n  \"im on my evil grind\",\r\n  \"im just chillen!\",\r\n];\r\n\r\nfunction addRandomMessage() {\r\n  wait(rand(10, 30), () => {\r\n    if (!isDead) {\r\n      const message = randomMessages[randi(0, randomMessages.length - 1)];\r\n      addTextBubble({ message: message });\r\n    }\r\n    addRandomMessage();\r\n  });\r\n}\r\n\r\nscene(\"main\", () => {\r\n  function spawnRandomPoop() {\r\n    if (!isDead) {\r\n      wait(rand(0, 40), () => {\r\n        const poop = add([\r\n          pos(center().x + rand(0, 600), center().y + rand(0, 200)),\r\n          sprite(\"poop\"),\r\n          anchor(\"center\"),\r\n          area(),\r\n          scale(0.5),\r\n          {\r\n            time: 0,\r\n          },\r\n          \"poop\",\r\n        ]);\r\n\r\n        poopCount++;\r\n\r\n        poop.onClick(() => {\r\n          var randInt = randi(0, 10);\r\n          if (randInt == 1) {\r\n            addTextBubble({\r\n              message: \"u betta wash ya hands b4 u feed me nasty :p\",\r\n            });\r\n          }\r\n\r\n          play(\"beep\");\r\n          addParticles(\r\n            \"heal\",\r\n            \"/sprites/particles/effect_heal.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n\r\n          poop.destroy();\r\n\r\n          poopCount--;\r\n        });\r\n\r\n        // Repeat the poop spawning\r\n        spawnRandomPoop();\r\n      });\r\n    }\r\n  }\r\n  // Constants\r\n  const followVal = 0.1;\r\n  const clickCooldown = 0.5;\r\n  const petArray = [\"nublin\", \"werm\", \"eye\"];\r\n\r\n  // Variables\r\n  let lastClickTime = 1;\r\n  let foodMeter = 40;\r\n  let foodLimit = 100;\r\n  let petIterator = 0;\r\n  let appleIsOut = false;\r\n  let hasBeenFed = false;\r\n  let shrinkCountdown = 1;\r\n  let beginShrinkTimer = false;\r\n  let isStarving = false;\r\n  let isIdle = true;\r\n  let poopCount = 0;\r\n  let loveMeter = 0;\r\n\r\n  // Objects\r\n\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_day\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  const pet = add([\r\n    pos(center()),\r\n    sprite(petType),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.5),\r\n    animate(),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"pet\",\r\n  ]);\r\n\r\n  // Menu button objects\r\n\r\n  const buttonFeed = add([\r\n    pos(center().x, center().y + 280),\r\n    sprite(\"button_feed\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_feed\",\r\n  ]);\r\n\r\n  const buttonKill = add([\r\n    pos(center().x + 250, center().y + 280),\r\n    sprite(\"button_kill\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_kill\",\r\n  ]);\r\n\r\n  const buttonPlay = add([\r\n    pos(center().x - 250, center().y + 280),\r\n    sprite(\"button_play\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_play\",\r\n  ]);\r\n\r\n  const buttonShop = add([\r\n    pos(width() - 100, 60),\r\n    sprite(\"button_shop\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.7),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_shop\",\r\n  ]);\r\n\r\n  updateMunnyBubbleText();\r\n\r\n  wait(lastClickTime - 0.5, () => {\r\n    addTextBubble({ message: \"heh... ima pet!takea good care of me >:3 \" });\r\n  });\r\n\r\n  pet.onUpdate(() => {\r\n    if (isIdle) {\r\n      pet.pos = pet.pos.lerp(\r\n        vec2(\r\n          center().x + (mousePos().x - center().x) * followVal,\r\n          center().y + (mousePos().y - center().y) * followVal\r\n        ),\r\n        0.04\r\n      );\r\n\r\n      pet.time += dt();\r\n      pet.pos.y += Math.sin(pet.time * 4);\r\n\r\n      foodMeter -= dt();\r\n\r\n      if (hasBeenFed) {\r\n        shrinkCountdown -= dt();\r\n        if (shrinkCountdown <= 0 && foodMeter < foodLimit) {\r\n          shrinkCountdown = 2;\r\n          hasBeenFed = false;\r\n          beginShrinkTimer = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (beginShrinkTimer && foodMeter < foodLimit) {\r\n      pet.scaleBy(0.99);\r\n      if (pet.scale <= vec2(0.5, 0.5)) beginShrinkTimer = false;\r\n    }\r\n\r\n    if (foodMeter < 20 && !isStarving) {\r\n      addTextBubble({ message: \"mannnn..... im hungy....\" });\r\n      isStarving = true;\r\n    } else if (foodMeter > 20 && isStarving) {\r\n      isStarving = false;\r\n    }\r\n\r\n    if (isDead || (foodMeter <= 0 && !isDead)) {\r\n      shake();\r\n      addTextBubble({ message: \"im dead asl 💀\" });\r\n      setIsDead(true);\r\n      pet.destroy();\r\n      const grave = add([\r\n        pos(center()),\r\n        sprite(\"grave\"),\r\n        anchor(\"center\"),\r\n        area(),\r\n        scale(2),\r\n        animate(),\r\n        {\r\n          time: 0,\r\n        },\r\n        \"grave\",\r\n      ]);\r\n\r\n      play(\"bong\", {\r\n        volume: 0.3,\r\n      });\r\n    }\r\n  });\r\n\r\n  spawnRandomPoop();\r\n  addRandomMessage();\r\n\r\n  pet.onClick(() => {\r\n    if (appleIsOut) {\r\n      if (time() - lastClickTime >= clickCooldown) {\r\n        if (!poopCount && foodMeter < foodLimit) {\r\n          var randInt = randi(0, 10);\r\n          if (randInt == 1) {\r\n            addTextBubble({ message: \"yyummerzz >:3\" });\r\n          }\r\n\r\n          addParticles(\r\n            \"heal\",\r\n            \"/sprites/particles/effect_heal.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n\r\n          play(\"eat\", {\r\n            volume: 0.3, // set the volume to 50%\r\n          });\r\n\r\n          pet.scaleBy(1.05);\r\n\r\n          appleIsOut = false;\r\n\r\n          shrinkCountdown = 5;\r\n          hasBeenFed = true;\r\n\r\n          if (!isDead) {\r\n            foodMeter += 20;\r\n          }\r\n        } else if (poopCount > 0 && foodMeter >= foodLimit) {\r\n          addParticles(\r\n            \"poison\",\r\n            \"/sprites/particles/effect_poison.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n          addTextBubble({\r\n            message: \"im seriously gonna throw up get that away from mee\",\r\n          });\r\n          if (loveMeter > 0) {\r\n            loveMeter--;\r\n          }\r\n        } else if (poopCount > 0) {\r\n          addTextBubble({\r\n            message: \"theres like.. poop right there. nasty\",\r\n          });\r\n          lastClickTime = time();\r\n        } else {\r\n          addTextBubble({ message: \"im rly fullll bro.\" });\r\n          lastClickTime = time();\r\n        }\r\n      }\r\n    } else {\r\n      if (time() - lastClickTime >= clickCooldown) {\r\n        // addTextBubble({ message: \"ya clickt me...wat a nicee click >:3\" });\r\n        lastClickTime = time();\r\n\r\n        loveMeter++;\r\n\r\n        addParticles(\r\n          \"heart\",\r\n          \"/sprites/particles/effect_heart.png\",\r\n          mousePos().x,\r\n          mousePos().y\r\n        );\r\n\r\n        play(\"meow\", {\r\n          volume: 1, // set the volume to 50%\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  // onKeyPress(\"a\", () => {\r\n  //   petIterator = (petIterator - 1 + petArray.length) % petArray.length;\r\n  //   pet.sprite = petArray[petIterator];\r\n  // });\r\n  // onKeyPress(\"d\", () => {\r\n  //   petIterator = (petIterator + 1) % 3;\r\n  //   pet.sprite = petArray[petIterator];\r\n  // });\r\n\r\n  // Button event handlers\r\n\r\n  onClick(\"button_feed\", () => {\r\n    const apple = add([\r\n      pos(mousePos()),\r\n      sprite(\"apple\"),\r\n      anchor(\"center\"),\r\n      area(),\r\n      scale(0.5),\r\n      {\r\n        time: 0,\r\n      },\r\n      \"apple\",\r\n    ]);\r\n\r\n    buttonFeed.sprite = \"button_feed_pressed\";\r\n\r\n    play(\"click\", {});\r\n\r\n    appleIsOut = !appleIsOut;\r\n\r\n    onUpdate(() => {\r\n      apple.pos = mousePos();\r\n      if (!appleIsOut) {\r\n        apple.destroy();\r\n        buttonFeed.sprite = \"button_feed\";\r\n      }\r\n    });\r\n  });\r\n\r\n  onMousePress(\"right\", () => {\r\n    appleIsOut = false;\r\n  });\r\n\r\n  onClick(\"button_kill\", () => {\r\n    addTextBubble({ message: \"why did u do that\\n(PRESS R TO RESET)\" });\r\n    setIsDead(true);\r\n    buttonKill.sprite = \"button_kill_pressed\";\r\n    wait(0.2, () => {\r\n      buttonKill.sprite = \"button_kill\";\r\n    });\r\n  });\r\n\r\n  onClick(\"button_play\", () => {\r\n    buttonPlay.sprite = \"button_play_pressed\";\r\n\r\n    wait(0.2, () => {\r\n      buttonPlay.sprite = \"button_play\";\r\n    });\r\n    if (!isDead) {\r\n      go(\"play\");\r\n    }\r\n  });\r\n\r\n  onKeyPress(\"r\", () => {\r\n    setMunny(0);\r\n    setIsDead(false);\r\n    setPetType(\"nublin\");\r\n    shopItems.forEach((item) => (item.bought = false));\r\n    // Reset other state here if needed\r\n    go(\"main\");\r\n  });\r\n  onClick(\"button_shop\", () => {\r\n    buttonShop.sprite = \"button_shop_pressed\";\r\n    play(\"click\");\r\n    wait(0.2, () => {\r\n      buttonShop.sprite = \"button_shop\";\r\n\r\n      if (!isDead) {\r\n        go(\"shop\");\r\n      }\r\n    });\r\n  });\r\n});\r\n","import \"../kaplay.js\";\r\nimport {\r\n  munny,\r\n  setMunny,\r\n  updateMunnyBubbleText,\r\n  addTextBubble,\r\n  shopItems,\r\n  setPetType,\r\n} from \"../utils/globalFunctions.js\";\r\n\r\nscene(\"shop\", () => {\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_day\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  const wizard = add([\r\n    pos(center()),\r\n    sprite(\"wizard\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.5),\r\n    animate(),\r\n    \"wizard\",\r\n  ]);\r\n\r\n  var itemsExist = false;\r\n\r\n  shopItems.forEach((item, index) => {\r\n    if (!item.bought) {\r\n      itemsExist = true;\r\n      const rectWidth = 200;\r\n      const rectHeight = 50;\r\n\r\n      var buttonColor = item.price <= munny ? YELLOW : RED;\r\n\r\n      const bubble = add([\r\n        color(buttonColor),\r\n        anchor(\"center\"),\r\n        pos(rectWidth / 2 + 10, height() - index * 60 - rectHeight / 2 - 10),\r\n        rect(rectWidth, rectHeight, { radius: 8 }),\r\n        outline(4, BLACK),\r\n        scale(1),\r\n        opacity(1),\r\n        area(),\r\n        item,\r\n        {\r\n          time: 0,\r\n          scaleTime: 0,\r\n        },\r\n        \"shopItem\",\r\n      ]);\r\n\r\n      bubble.add([\r\n        anchor(\"center\"),\r\n        color(BLACK),\r\n        text(`${item.name} - $${item.price}`, { size: 24 }),\r\n        layer(\"ui\"),\r\n        area(),\r\n      ]);\r\n\r\n      add([\r\n        anchor(\"center\"),\r\n        color(BLACK),\r\n        text(\"add munny +10\"),\r\n        layer(\"ui\"),\r\n        area(),\r\n        item,\r\n        \"addMunny\",\r\n      ]);\r\n    }\r\n\r\n    if (!itemsExist) {\r\n      addTextBubble({ message: \"my items are gone youve ruined me\" });\r\n    } else {\r\n      addTextBubble({ message: \"welcome to my shop!\" });\r\n    }\r\n  });\r\n\r\n  onClick(\"shopItem\", (item) => {\r\n    if (munny >= item.price) {\r\n      setMunny(munny - item.price);\r\n      addTextBubble({ message: `here's your ${item.name}!` });\r\n      play(\"buy\", { volume: 0.3 });\r\n      updateMunnyBubbleText();\r\n      item.destroy();\r\n      item.bought = true;\r\n      setPetType(item.name);\r\n    } else {\r\n      const randInt = randi(0, 10);\r\n\r\n      switch (randInt) {\r\n        case 0:\r\n          addTextBubble({\r\n            // message: \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\r\n            message: \"come back when you're a little... ermmmm. richerrrr!\",\r\n          });\r\n          break;\r\n        case 1:\r\n          addTextBubble({ message: \"you dont have enough munny!\" });\r\n          break;\r\n        case 2:\r\n          addTextBubble({ message: \"get lost brokie...\" });\r\n          break;\r\n      }\r\n      play(\"hurt\");\r\n    }\r\n  });\r\n\r\n  onClick(\"addMunny\", (item) => {\r\n    setMunny(munny + 10);\r\n    addTextBubble({ message: `You added 10 munny!` });\r\n    play(\"click\");\r\n    updateMunnyBubbleText();\r\n  });\r\n\r\n  const buttonShop = add([\r\n    pos(width() - 100, 60),\r\n    sprite(\"button_exit\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.7),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_exit\",\r\n  ]);\r\n\r\n  onClick(\"button_exit\", () => {\r\n    play(\"click\");\r\n    buttonShop.sprite = \"button_exit_pushed\";\r\n\r\n    wait(0.2, () => {\r\n      buttonShop.sprite = \"button_exit\";\r\n      go(\"main\");\r\n    });\r\n  });\r\n\r\n  updateMunnyBubbleText();\r\n});\r\n","import \"./utils/globalFunctions.js\";\r\nimport \"./kaplay.js\";\r\nimport \"./assets.js\";\r\nimport \"./scenes/play.js\";\r\nimport \"./scenes/pet-game.js\";\r\nimport \"./scenes/shop.js\";\r\n\r\n// Load  play scene assets\r\n\r\ngo(\"main\");\r\n// go(\"play\");\r\n"],"names":["kaplay","overshoot","addParticles","name","path","x","y","data","loadedSpriteData","particleEmitter","addTextBubble","message","isDead","newMessage","maxCharPerLine","lineStart","cutoff","lastSpace","bubble","bubbleText","hexScale","setIsDead","val","munny","setMunny","updateMunnyBubbleText","shopItems","petType","setPetType","type","music","difficulty","playerLives","spawnApple","pet","target","directionX","adjustedTargetX","healthArray","updateHealthBar","h","health","score","scorePos","scoreBubbleText","munnyEarned","a","p","scoreBubble","buttonShop","randomMessages","addRandomMessage","spawnRandomPoop","poop","poopCount","randInt","followVal","clickCooldown","lastClickTime","foodMeter","foodLimit","appleIsOut","hasBeenFed","shrinkCountdown","beginShrinkTimer","isStarving","buttonFeed","buttonKill","buttonPlay","apple","item","itemsExist","index","rectWidth","rectHeight","buttonColor"],"mappings":"+uBAGiBA,EAAO,CACtB,MAAO,KACP,OAAQ,IACR,OAAQ,SAAS,cAAc,WAAW,EAC1C,UAAW,EACb,CAAC,ECNM,SAASC,EAAU,EAAG,CAK3B,MAAO,GAAK,GAAM,KAAK,IAAI,EAAI,EAAO,KAAK,GAAK,CAAC,EAAK,KAAK,IAAI,EAAI,CAAK,CAC1E,CAKO,SAASC,EAAaC,EAAMC,EAAMC,EAAGC,EAAG,CAC7C,WAAWH,EAAMC,CAAI,EAAE,KAAMG,GAAS,CAEpC,IAAIC,EAAmB,UAAUL,CAAI,EAAE,KAEnCM,EAAkB,IAAI,CACxB,IAAIJ,EAAGC,CAAC,EACR,UACE,CACE,IAAK,GACL,SAAU,CAAC,EAAG,CAAC,EACf,MAAO,CAAC,GAAI,GAAG,EACf,aAAc,CAAC,KAAK,CAAC,EAAG,KAAK,EAAG,GAAG,CAAC,EACpC,QAAS,CAAC,EAAG,EAAG,EAChB,MAAO,CAAC,EAAG,EAAE,EACb,gBAAiB,CAAC,IAAK,GAAG,EAC1B,OAAQ,CAAC,EAAG,EACZ,UAAW,CAAC,EAAK,CAAG,EACpB,QAASE,EAAiB,IAC1B,MAAOA,EAAiB,MACzB,EACD,CACE,MAAO,IAAI,KAAK,KAAK,CAAC,EAAG,GAAI,EAAE,EAC/B,SAAU,EACV,KAAM,EACN,UAAW,IACX,OAAQ,EACT,CACF,CACP,CAAK,EAGDC,EAAgB,MAAM,IAAM,CAC1B,QAAQA,CAAe,CAC7B,CAAK,EAGDA,EAAgB,KAAK,CAAC,CAC1B,CAAG,CACH,CAEO,SAASC,EAAc,CAC5B,QAAAC,EAAU,GACV,EAAAN,EAAI,OAAM,EAAG,EACb,EAAAC,EAAI,SAAS,EAAI,GACnB,EAAI,GAAI,CACN,GAAI,CAACM,EAAQ,CACX,KAAK,OAAQ,CACX,OAAQ,CACd,CAAK,EAED,IAAIC,EAAa,GACjB,MAAMC,EAAiB,GAGvB,QAFIC,EAAY,EAETA,EAAYJ,EAAQ,QAAQ,CAEjC,IAAIK,EAASD,EAAYD,EACzB,GAAIE,GAAUL,EAAQ,OAAQ,CAC5BE,GAAcF,EAAQ,UAAUI,CAAS,EACzC,KACD,CAED,IAAIE,EAAYN,EAAQ,YAAY,IAAKK,CAAM,EAC3CC,GAAaF,IAAWE,EAAYD,GACxCH,GAAcF,EAAQ,UAAUI,EAAWE,CAAS,EAAI;AAAA,EACxDF,EAAYE,EAAY,CACzB,CAED,MAAMC,EAAS,IAAI,CACjB,OAAO,QAAQ,EACf,IAAIb,EAAGC,CAAC,EACR,KAAK,IAAK,IAAK,CAAE,OAAQ,CAAC,CAAE,EAC5B,QAAQ,EAAG,KAAK,EAChB,MAAM,EAAG,EACT,QAAQ,CAAC,EACT,CACE,KAAM,EACN,UAAW,CACZ,CACP,CAAK,EAEKa,EAAaD,EAAO,IAAI,CAC5B,OAAO,QAAQ,EACf,KAAKL,EAAY,CACf,KAAM,GACN,QAAS,CACjB,CAAO,EACD,MAAM,KAAK,CACjB,CAAK,EAEDK,EAAO,SAAS,IAAM,CACpBA,EAAO,MAAQ,KAEfA,EAAO,QAAQjB,EAAUiB,EAAO,KAAO,CAAC,CAAC,EAErCA,EAAO,KAAO,IAChBA,EAAO,SAAW,KAClBC,EAAW,SAAW,GAAI,EAAG,EAErC,CAAK,CACF,CACH,CAEA,MAAMC,EAAW,IAGf,KAAK,KAAK,IAAI,CAAC,EAAG,KAAK,IAAI,CAAC,CAAC,EAAE,MAAMA,CAAQ,EAC7C,KAAK,KAAK,IAAI,KAAK,GAAK,CAAC,EAAG,KAAK,IAAI,KAAK,GAAK,CAAC,CAAC,EAAE,MAAMA,CAAQ,EACjE,KAAK,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,EAAG,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,CAAC,EAAE,MAC7DA,CACD,EACD,KAAK,KAAK,IAAI,KAAK,EAAE,EAAG,KAAK,IAAI,KAAK,EAAE,CAAC,EAAE,MAAMA,CAAQ,EACzD,KAAK,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,EAAG,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,CAAC,EAAE,MAC7DA,CACD,EACD,KAAK,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,EAAG,KAAK,IAAK,EAAI,KAAK,GAAM,CAAC,CAAC,EAAE,MAC7DA,CACD,EA4DI,IAAIR,EAAS,GACb,SAASS,EAAUC,EAAK,CAC7BV,EAASU,CACX,CAEO,IAAIC,EAAQ,EAEZ,SAASC,EAASF,EAAK,CAC5BC,EAAQD,CACV,CAEO,SAASG,GAAwB,CAClB,IAAI,CACtB,IAAI,GAAI,EAAE,EACV,KAAK,IAAK,IAAK,CAAE,OAAQ,CAAC,CAAE,EAC5B,QAAQ,EAAG,KAAK,EAChB,MAAM,EAAG,EACT,QAAQ,CAAC,EACT,CACE,KAAM,EACN,UAAW,CACZ,CACL,CAAG,EACW,IAAI,CACd,IAAI,GAAI,EAAE,EACV,MAAM,CAAC,EACP,KAAK,UAAUF,CAAK,GAAI,CACtB,KAAM,GACN,QAAS,CACf,CAAK,EACD,MAAM,KAAK,CACf,CAAG,CACH,CAEO,MAAMG,EAAY,CACvB,CAAE,KAAM,MAAO,MAAO,GAAI,OAAQ,OAAQ,OAAQ,EAAO,EACzD,CAAE,KAAM,OAAQ,MAAO,IAAK,OAAQ,OAAQ,OAAQ,EAAO,EAC3D,CAAE,KAAM,MAAO,MAAO,IAAK,OAAQ,MAAO,OAAQ,EAAO,CAC3D,EAEO,IAAIC,EAAU,SACd,SAASC,EAAWC,EAAM,CAC/BF,EAAUE,CACZ,CC1OA,SAAS,IAAI,EACb,WAAW,SAAU,0BAA0B,EAC/C,WAAW,OAAQ,wBAAwB,EAC3C,WAAW,MAAO,uBAAuB,EACzC,WAAW,SAAU,qCAAqC,EAC1D,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,cAAe,kCAAkC,EAC5D,WAAW,sBAAuB,yCAAyC,EAC3E,WAAW,QAAS,4BAA4B,EAChD,WAAW,QAAS,4BAA4B,EAChD,WAAW,OAAQ,2BAA2B,EAC9C,WAAW,SAAU,sCAAsC,EAC3D,WAAW,QAAS,qCAAqC,EACzD,WAAW,QAAS,qCAAqC,EACzD,WAAW,QAAS,4BAA4B,EAChD,WAAW,SAAU,6BAA6B,EAClD,WAAW,WAAY,mCAAmC,EAC1D,WAAW,QAAS,4BAA4B,EAChD,WAAW,MAAO,mCAAmC,EACrD,WAAW,OAAQ,gCAAgC,EACnD,WAAW,SAAU,qBAAqB,EAC1C,WAAW,cAAe,kCAAkC,EAC5D,WAAW,qBAAsB,yCAAyC,EAC1E,WAAW,MAAO,yBAAyB,EAE3C,UAAU,OAAQ,kBAAkB,EACpC,UAAU,QAAS,mBAAmB,EACtC,UAAU,MAAO,iBAAiB,EAClC,UAAU,OAAQ,kBAAkB,EACpC,UAAU,OAAQ,kBAAkB,EACpC,UAAU,OAAQ,kBAAkB,EACpC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,aAAc,2BAA2B,EACnD,UAAU,OAAQ,uBAAuB,EACzC,UAAU,QAAS,mBAAmB,EACtC,UAAU,OAAQ,sBAAsB,EACxC,UAAU,UAAW,qBAAqB,EAC1C,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,SAAU,oBAAoB,EACxC,UAAU,QAAS,mBAAmB,EACtC,UAAU,OAAQ,8BAA8B,EAChD,UAAU,MAAO,iBAAiB,ECxClC,MAAM,OAAQ,IAAM,CAClB,MAAMC,EAAQ,KAAK,aAAc,CAAE,OAAQ,GAAI,CAAE,EACjD,OAAO,IAAM,CACX,WAAW,CACT,OAAQ,SACR,IAAK,OAAQ,EACb,OAAQ,QACd,CAAK,CACL,CAAG,EAED,IAAIC,EAAa,EACbC,EAAc,EAElB,SAASC,GAAa,CACN,IAAI,CAChB,IAAI,KAAK,EAAG,MAAO,CAAA,EAAG,GAAG,EACzB,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,KAAK,KAAM,GAAG,EACd,OACN,CAAK,EAED,KAAK,KAAK,EAAG,EAAIF,CAAU,EAAGE,CAAU,CACzC,CAED,MAAMC,EAAM,IAAI,CACd,IAAI,OAAQ,EAAC,EAAG,OAAM,EAAK,GAAG,EAC9B,OAAOP,CAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,OAAO,CAAC,EACR,QAAS,EACT,CACE,KAAM,EACN,QAAS,OAAQ,EAAC,MAAO,CAC1B,EACD,KACJ,CAAG,EAED,SAAS,IAAM,CACb,MAAMQ,EAAS,WACTC,EAAaD,EAAO,EAAID,EAAI,IAAI,EAGhCG,EACJF,EAAO,EACP,KAAK,KAAKC,CAAU,EAAI,KAAK,IAAI,KAAK,IAAIA,CAAU,EAJrC,CAIgD,EAEjEF,EAAI,IAAI,EAAIA,EAAI,IAAI,GAAKG,EAAkBH,EAAI,IAAI,GAAK,GAExDA,EAAI,MAAQE,EAAa,GAEzBF,EAAI,QAAUA,EAAI,IAAI,MAAK,CAC/B,CAAG,EAED,IAAII,EAAc,CAAA,EAElB,SAASC,GAAkB,CACzB,UAAWC,KAAKF,EACdE,EAAE,QAAO,EAEXF,EAAc,CAAA,EAEd,QAAS,EAAI,EAAG,EAAIN,EAAa,IAAK,CACpC,MAAMS,EAAS,IAAI,CACjB,IAAI,IAAM,EAAI,GAAI,EAAE,EACpB,OAAO,OAAO,EACd,MAAM,EAAG,EACT,QAAQ,CAAC,CACjB,CAAO,EAEDH,EAAY,CAAC,EAAIG,CAClB,CACF,CACD,IAAIC,EAAQ,EACRC,EAAW,KAAK,IAAK,EAAE,EACvBC,EACAC,EAAc,EAElB,UAAU,QAAS,MAAO,CAACC,EAAGC,IAAM,CAClCD,EAAE,QAAO,EAETJ,GAAS,GAET,KAAK,KAAK,EAEVxC,EAAa,MAAO,qCAAsC4C,EAAE,IAAI,EAAGA,EAAE,IAAI,CAAC,EAC1E,QAEIF,GACFA,EAAgB,QAAO,EAEzBA,EAAkBI,EAAY,IAAI,CAChC,IAAI,GAAI,EAAE,EACV,MAAM,CAAC,EACP,KAAK,UAAUN,CAAK,GAAI,CACtB,KAAM,GACN,QAAS,CACjB,CAAO,EACD,MAAM,KAAK,CACjB,CAAK,EAEGA,EAAQ,MAAQ,GAClB,KAAK,GAAK,IAAM,CACd,KAAK,MAAM,EACXlB,EAASD,EAAQ,EAAE,EACnBE,IACAoB,GAAe,EACvB,CAAO,CAEP,CAAG,EAED,SAAS,QAAUC,GAAM,CACnBA,EAAE,IAAI,EAAI,OAAM,EAAK,KACvBA,EAAE,QAAO,EAETd,GAAe,EACfO,IAGA,KAAK,MAAM,EACX,QAGIP,GAAe,IACjBE,EAAI,QAAO,EACXJ,EAAM,KAAI,EACU,IAAI,CACtB,OAAO,QAAQ,EACf,IAAI,OAAM,CAAE,EACZ,KAAK,IAAK,IAAK,CAAE,OAAQ,CAAC,CAAE,EAC5B,QAAQ,EAAG,KAAK,EAChB,MAAM,EAAG,EACT,QAAQ,CAAC,EACT,CACE,KAAM,EACN,UAAW,CACZ,CACX,CAAS,EAEmC,IAAI,CACtC,OAAO,QAAQ,EACf,MAAM,CAAC,EACP,KAAK;AAAA,YAAwBY,CAAK;AAAA,gBAAmBG,CAAW,GAAI,CAClE,KAAM,GACN,QAAS,CACrB,CAAW,EACD,MAAM,KAAK,CACrB,CAAS,EAED,KAAK,EAAG,IAAM,CACZ,GAAG,MAAM,CACnB,CAAS,GAGT,CAAG,EAED,SAAS,IAAM,CACbd,GAAc,GAAI,EAAG,IACrBA,EAAa,KAAK,IAAIA,EAAY,GAAG,CACzC,CAAG,EAGD,MAAMiB,EAAc,IAAI,CACtB,IAAIL,CAAQ,EACZ,KAAK,IAAK,IAAK,CAAE,OAAQ,CAAC,CAAE,EAC5B,QAAQ,EAAG,KAAK,EAChB,MAAM,EAAG,EACT,QAAQ,CAAC,EACT,CACE,KAAM,EACN,UAAW,CACZ,CACL,CAAG,EAEDC,EAAkBI,EAAY,IAAI,CAChC,IAAI,GAAI,EAAE,EACV,MAAM,CAAC,EACP,KAAK,UAAUN,CAAK,GAAI,CACtB,KAAM,GACN,QAAS,CACf,CAAK,EACD,MAAM,KAAK,CACf,CAAG,EAEDH,IACAN,IACAR,IAQA,MAAMwB,EAAa,IAAI,CACrB,IAAI,MAAK,EAAK,IAAK,EAAE,EACrB,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAED,QAAQ,cAAe,IAAM,CAC3B,KAAK,OAAO,EACZA,EAAW,OAAS,qBAEpB,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,cACpBnB,EAAM,KAAK,YAAY,EACvB,GAAG,MAAM,CACf,CAAK,CACL,CAAG,CACH,CAAC,ECzND,MAAMoB,EAAiB,CACrB,gBACA,0BACA,gCACA,mCACA,OACA,WACA,iBACA,sBACA,kBACF,EAEA,SAASC,GAAmB,CAC1B,KAAK,KAAK,GAAI,EAAE,EAAG,IAAM,CACvB,GAAI,CAACvC,EAAQ,CACX,MAAMD,EAAUuC,EAAe,MAAM,EAAGA,EAAe,OAAS,CAAC,CAAC,EAClExC,EAAc,CAAE,QAASC,CAAO,CAAE,CACnC,CACDwC,GACJ,CAAG,CACH,CAEA,MAAM,OAAQ,IAAM,CAClB,SAASC,GAAkB,CACpBxC,GACH,KAAK,KAAK,EAAG,EAAE,EAAG,IAAM,CACtB,MAAMyC,EAAO,IAAI,CACf,IAAI,OAAQ,EAAC,EAAI,KAAK,EAAG,GAAG,EAAG,OAAQ,EAAC,EAAI,KAAK,EAAG,GAAG,CAAC,EACxD,OAAO,MAAM,EACb,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,MACV,CAAS,EAEDC,IAEAD,EAAK,QAAQ,IAAM,CACjB,IAAIE,EAAU,MAAM,EAAG,EAAE,EACrBA,GAAW,GACb7C,EAAc,CACZ,QAAS,6CACvB,CAAa,EAGH,KAAK,MAAM,EACXR,EACE,OACA,qCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACvB,EAEUmD,EAAK,QAAO,EAEZC,GACV,CAAS,EAGDF,GACR,CAAO,CAEJ,CAED,MAAMI,EAAY,GACZC,EAAgB,GAItB,IAAIC,EAAgB,EAChBC,EAAY,GACZC,EAAY,IAEZC,EAAa,GACbC,EAAa,GACbC,EAAkB,EAClBC,EAAmB,GACnBC,EAAa,GAEbX,EAAY,EAKhB,OAAO,IAAM,CACX,WAAW,CACT,OAAQ,SACR,IAAK,OAAQ,EACb,OAAQ,QACd,CAAK,CACL,CAAG,EAED,MAAMpB,EAAM,IAAI,CACd,IAAI,OAAM,CAAE,EACZ,OAAOP,CAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,QAAS,EACT,CACE,KAAM,CACP,EACD,KACJ,CAAG,EAIKuC,EAAa,IAAI,CACrB,IAAI,OAAM,EAAG,EAAG,OAAQ,EAAC,EAAI,GAAG,EAChC,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAEKC,EAAa,IAAI,CACrB,IAAI,OAAM,EAAG,EAAI,IAAK,OAAQ,EAAC,EAAI,GAAG,EACtC,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAEKC,EAAa,IAAI,CACrB,IAAI,OAAM,EAAG,EAAI,IAAK,OAAQ,EAAC,EAAI,GAAG,EACtC,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAEKnB,EAAa,IAAI,CACrB,IAAI,MAAK,EAAK,IAAK,EAAE,EACrB,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAEDxB,IAEA,KAAKiC,EAAgB,GAAK,IAAM,CAC9BhD,EAAc,CAAE,QAAS,2CAA2C,CAAE,CAC1E,CAAG,EAEDwB,EAAI,SAAS,IAAM,CAEfA,EAAI,IAAMA,EAAI,IAAI,KAChB,KACE,OAAQ,EAAC,GAAK,SAAQ,EAAG,EAAI,OAAM,EAAG,GAAKsB,EAC3C,OAAQ,EAAC,GAAK,SAAQ,EAAG,EAAI,OAAM,EAAG,GAAKA,CAC5C,EACD,GACR,EAEMtB,EAAI,MAAQ,KACZA,EAAI,IAAI,GAAK,KAAK,IAAIA,EAAI,KAAO,CAAC,EAElCyB,GAAa,GAAE,EAEXG,IACFC,GAAmB,GAAE,EACjBA,GAAmB,GAAKJ,EAAYC,IACtCG,EAAkB,EAClBD,EAAa,GACbE,EAAmB,KAKrBA,GAAoBL,EAAYC,IAClC1B,EAAI,QAAQ,GAAI,EACZA,EAAI,OAAS,KAAK,GAAK,EAAG,IAAG8B,EAAmB,KAGlDL,EAAY,IAAM,CAACM,GACrBvD,EAAc,CAAE,QAAS,0BAA0B,CAAE,EACrDuD,EAAa,IACJN,EAAY,IAAMM,IAC3BA,EAAa,KAGXrD,GAAW+C,GAAa,GAAK,CAAC/C,KAChC,QACAF,EAAc,CAAE,QAAS,gBAAgB,CAAE,EAC3CW,EAAU,EAAI,EACda,EAAI,QAAO,EACG,IAAI,CAChB,IAAI,OAAM,CAAE,EACZ,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,CAAC,EACP,QAAS,EACT,CACE,KAAM,CACP,EACD,OACR,CAAO,EAED,KAAK,OAAQ,CACX,OAAQ,EAChB,CAAO,EAEP,CAAG,EAEDkB,IACAD,IAEAjB,EAAI,QAAQ,IAAM,CAChB,GAAI2B,GACF,GAAI,KAAI,EAAKH,GAAiBD,EAC5B,GAAI,CAACH,GAAaK,EAAYC,EAAW,CACvC,IAAIL,EAAU,MAAM,EAAG,EAAE,EACrBA,GAAW,GACb7C,EAAc,CAAE,QAAS,eAAe,CAAE,EAG5CR,EACE,OACA,qCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACvB,EAEU,KAAK,MAAO,CACV,OAAQ,EACpB,CAAW,EAEDgC,EAAI,QAAQ,IAAI,EAEhB2B,EAAa,GAEbE,EAAkB,EAClBD,EAAa,GAERlD,IACH+C,GAAa,GAEhB,MAAUL,EAAY,GAAKK,GAAaC,GACvC1D,EACE,SACA,uCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACvB,EACUQ,EAAc,CACZ,QAAS,oDACrB,CAAW,GAIQ4C,EAAY,GACrB5C,EAAc,CACZ,QAAS,uCACrB,CAAW,EACDgD,EAAgB,KAAI,IAEpBhD,EAAc,CAAE,QAAS,oBAAoB,CAAE,EAC/CgD,EAAgB,KAAI,QAIpB,KAAI,EAAKA,GAAiBD,IAE5BC,EAAgB,KAAI,EAIpBxD,EACE,QACA,sCACA,SAAU,EAAC,EACX,SAAU,EAAC,CACrB,EAEQ,KAAK,OAAQ,CACX,OAAQ,CAClB,CAAS,EAGT,CAAG,EAaD,QAAQ,cAAe,IAAM,CAC3B,MAAMmE,EAAQ,IAAI,CAChB,IAAI,SAAQ,CAAE,EACd,OAAO,OAAO,EACd,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,OACN,CAAK,EAEDH,EAAW,OAAS,sBAEpB,KAAK,QAAS,CAAA,CAAE,EAEhBL,EAAa,CAACA,EAEd,SAAS,IAAM,CACbQ,EAAM,IAAM,WACPR,IACHQ,EAAM,QAAO,EACbH,EAAW,OAAS,cAE5B,CAAK,CACL,CAAG,EAED,aAAa,QAAS,IAAM,CAC1BL,EAAa,EACjB,CAAG,EAED,QAAQ,cAAe,IAAM,CAC3BnD,EAAc,CAAE,QAAS;AAAA,mBAAuC,CAAE,EAClEW,EAAU,EAAI,EACd8C,EAAW,OAAS,sBACpB,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,aAC1B,CAAK,CACL,CAAG,EAED,QAAQ,cAAe,IAAM,CAC3BC,EAAW,OAAS,sBAEpB,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,aAC1B,CAAK,EACIxD,GACH,GAAG,MAAM,CAEf,CAAG,EAED,WAAW,IAAK,IAAM,CACpBY,EAAS,CAAC,EACVH,EAAU,EAAK,EACfO,EAAW,QAAQ,EACnBF,EAAU,QAAS4C,GAAUA,EAAK,OAAS,EAAM,EAEjD,GAAG,MAAM,CACb,CAAG,EACD,QAAQ,cAAe,IAAM,CAC3BrB,EAAW,OAAS,sBACpB,KAAK,OAAO,EACZ,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,cAEfrC,GACH,GAAG,MAAM,CAEjB,CAAK,CACL,CAAG,CACH,CAAC,ECnYD,MAAM,OAAQ,IAAM,CAClB,OAAO,IAAM,CACX,WAAW,CACT,OAAQ,SACR,IAAK,OAAQ,EACb,OAAQ,QACd,CAAK,CACL,CAAG,EAEc,IAAI,CACjB,IAAI,OAAM,CAAE,EACZ,OAAO,QAAQ,EACf,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,QAAS,EACT,QACJ,CAAG,EAED,IAAI2D,EAAa,GAEjB7C,EAAU,QAAQ,CAAC4C,EAAME,IAAU,CACjC,GAAI,CAACF,EAAK,OAAQ,CAChBC,EAAa,GACb,MAAME,EAAY,IACZC,EAAa,GAEnB,IAAIC,EAAcL,EAAK,OAAS/C,EAAQ,OAAS,IAElC,IAAI,CACjB,MAAMoD,CAAW,EACjB,OAAO,QAAQ,EACf,IAAIF,EAAY,EAAI,GAAI,OAAM,EAAKD,EAAQ,GAAKE,EAAa,EAAI,EAAE,EACnE,KAAKD,EAAWC,EAAY,CAAE,OAAQ,CAAC,CAAE,EACzC,QAAQ,EAAG,KAAK,EAChB,MAAM,CAAC,EACP,QAAQ,CAAC,EACT,KAAM,EACNJ,EACA,CACE,KAAM,EACN,UAAW,CACZ,EACD,UACR,CAAO,EAEM,IAAI,CACT,OAAO,QAAQ,EACf,MAAM,KAAK,EACX,KAAK,GAAGA,EAAK,IAAI,OAAOA,EAAK,KAAK,GAAI,CAAE,KAAM,EAAE,CAAE,EAClD,MAAM,IAAI,EACV,KAAM,CACd,CAAO,EAED,IAAI,CACF,OAAO,QAAQ,EACf,MAAM,KAAK,EACX,KAAK,eAAe,EACpB,MAAM,IAAI,EACV,KAAM,EACNA,EACA,UACR,CAAO,CACF,CAKC5D,EAHG6D,EAGW,CAAE,QAAS,qBAAqB,EAFhC,CAAE,QAAS,mCAAmC,CAEZ,CAEtD,CAAG,EAED,QAAQ,WAAaD,GAAS,CAC5B,GAAI/C,GAAS+C,EAAK,MAChB9C,EAASD,EAAQ+C,EAAK,KAAK,EAC3B5D,EAAc,CAAE,QAAS,eAAe4D,EAAK,IAAI,GAAG,CAAE,EACtD,KAAK,MAAO,CAAE,OAAQ,EAAK,CAAA,EAC3B7C,IACA6C,EAAK,QAAO,EACZA,EAAK,OAAS,GACd1C,EAAW0C,EAAK,IAAI,MACf,CAGL,OAFgB,MAAM,EAAG,EAAE,EAEZ,CACb,IAAK,GACH5D,EAAc,CAEZ,QAAS,sDACrB,CAAW,EACD,MACF,IAAK,GACHA,EAAc,CAAE,QAAS,6BAA6B,CAAE,EACxD,MACF,IAAK,GACHA,EAAc,CAAE,QAAS,oBAAoB,CAAE,EAC/C,KACH,CACD,KAAK,MAAM,CACZ,CACL,CAAG,EAED,QAAQ,WAAa4D,GAAS,CAC5B9C,EAASD,EAAQ,EAAE,EACnBb,EAAc,CAAE,QAAS,qBAAuB,CAAA,EAChD,KAAK,OAAO,EACZe,GACJ,CAAG,EAED,MAAMwB,EAAa,IAAI,CACrB,IAAI,MAAK,EAAK,IAAK,EAAE,EACrB,OAAO,aAAa,EACpB,OAAO,QAAQ,EACf,KAAM,EACN,MAAM,EAAG,EACT,CACE,KAAM,CACP,EACD,aACJ,CAAG,EAED,QAAQ,cAAe,IAAM,CAC3B,KAAK,OAAO,EACZA,EAAW,OAAS,qBAEpB,KAAK,GAAK,IAAM,CACdA,EAAW,OAAS,cACpB,GAAG,MAAM,CACf,CAAK,CACL,CAAG,EAEDxB,GACF,CAAC,ECrID,GAAG,MAAM"}