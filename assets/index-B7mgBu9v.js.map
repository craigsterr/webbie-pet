{"version":3,"file":"index-B7mgBu9v.js","sources":["../../src/main.js"],"sourcesContent":["import kaplay from \"kaplay\";\r\nimport \"kaplay/global\"; // uncomment if you want to use without the k. prefix\r\n\r\nkaplay({\r\n  width: 1280,\r\n  height: 720,\r\n  canvas: document.querySelector(\"#mycanvas\"),\r\n  letterbox: true,\r\n});\r\nloadRoot(\"./\"); // A good idea for Itch.io publishing later\r\nloadSprite(\"nublin\", \"/sprites/pets/nublin.png\");\r\nloadSprite(\"werm\", \"/sprites/pets/werm.png\");\r\nloadSprite(\"eye\", \"/sprites/pets/eye.png\");\r\nloadSprite(\"bg_day\", \"/sprites/backgrounds/morning_bg.png\");\r\nloadSprite(\"button_feed\", \"/sprites/buttons/button_feed.png\");\r\nloadSprite(\"button_feed_pressed\", \"/sprites/buttons/button_feed_pushed.png\");\r\nloadSprite(\"button_kill\", \"/sprites/buttons/button_kill.png\");\r\nloadSprite(\"button_kill_pressed\", \"/sprites/buttons/button_kill_pushed.png\");\r\nloadSprite(\"button_play\", \"/sprites/buttons/button_play.png\");\r\nloadSprite(\"button_play_pressed\", \"/sprites/buttons/button_play_pushed.png\");\r\nloadSprite(\"apple\", \"/sprites/objects/apple.png\");\r\nloadSprite(\"grave\", \"/sprites/objects/grave.png\");\r\nloadSprite(\"poop\", \"/sprites/objects/poop.png\");\r\nloadSprite(\"poison\", \"/sprites/objects/effect_poison.png\");\r\nloadSound(\"beep\", \"/sounds/beep.mp3\");\r\nloadSound(\"click\", \"/sounds/click.mp3\");\r\nloadSound(\"eat\", \"/sounds/eat.mp3\");\r\nloadSound(\"meow\", \"/sounds/meow.wav\");\r\nloadSound(\"bell\", \"/sounds/bell.mp3\");\r\nloadSound(\"fart\", \"/sounds/fart.mp3\");\r\n\r\nfunction overshoot(t) {\r\n  const amp = 0.7;\r\n  const freq = 2;\r\n  const decay = 4;\r\n\r\n  return 1 + (amp * Math.sin(t * freq * Math.PI * 2)) / Math.exp(t * decay);\r\n}\r\n\r\nfunction easeOutQuint(x) {\r\n  return 1 - Math.pow(1 - x, 5);\r\n}\r\nfunction addParticles(name, path, x, y) {\r\n  loadSprite(name, path).then((data) => {\r\n    // Fun fact: the data parameter passed from the promise is the same as getSprite().data\r\n    let loadedSpriteData = getSprite(name).data;\r\n\r\n    let particleEmitter = add([\r\n      pos(x, y),\r\n      particles(\r\n        {\r\n          max: 20, // the max amount of particles generated from this emitter at one time\r\n          lifeTime: [2, 5], // how long the particles last before being destroyed\r\n          speed: [50, 200], // how fast the particles are moving\r\n          acceleration: [vec2(0), vec2(0, -10)], // changes the speed of the particle over its lifetime\r\n          damping: [0, 0.5], // slows down the particle over its lifetime\r\n          angle: [0, 40], // the rotation of each particle\r\n          angularVelocity: [-20, -20], // how fast each particle should be rotating\r\n          scales: [0.1], // how large the particle is over its lifetime\r\n          opacities: [1.0, 0.0], // the opacity of the particle over its lifetime\r\n          texture: loadedSpriteData.tex, // texture of the sprite\r\n          quads: loadedSpriteData.frames, // to tell whe emitter what frames of the sprite to use\r\n        },\r\n        {\r\n          shape: new Rect(vec2(0), 32, 32), // the area where particles should be emitted from (can be empty)\r\n          lifetime: 5, // how long the emitter should last\r\n          rate: 5, // the rate at which particles are emitted\r\n          direction: -90, // the direction where particles should be traveling\r\n          spread: 20, // variance in the direction where particles should be traveling\r\n        }\r\n      ),\r\n    ]);\r\n\r\n    // .onEnd is called when the emitter's lifetime (in this example 5 seconds), has expired.\r\n    particleEmitter.onEnd(() => {\r\n      destroy(particleEmitter);\r\n    });\r\n\r\n    // Emit Particles at runtime\r\n    particleEmitter.emit(5);\r\n  });\r\n}\r\n\r\nfunction addTextBubble({\r\n  message = \"\",\r\n  x = center().x,\r\n  y = center().y - 200,\r\n} = {}) {\r\n  play(\"beep\", {\r\n    volume: 1, // set the volume to 50%\r\n  });\r\n\r\n  const bubble = add([\r\n    anchor(\"center\"),\r\n    pos(x, y),\r\n    rect(400, 100, { radius: 8 }),\r\n    outline(4, BLACK),\r\n    scale(0.1),\r\n    opacity(1),\r\n    {\r\n      time: 0,\r\n      scaleTime: 0,\r\n    },\r\n  ]);\r\n\r\n  const bubbleText = bubble.add([\r\n    anchor(\"center\"),\r\n    text(message, {\r\n      size: 26,\r\n      opacity: 1,\r\n    }),\r\n    color(BLACK),\r\n  ]);\r\n\r\n  bubble.onUpdate(() => {\r\n    bubble.time += dt();\r\n\r\n    bubble.scaleTo(overshoot(bubble.time * 2));\r\n\r\n    if (bubble.time > 2) {\r\n      bubble.opacity -= dt();\r\n      bubbleText.opacity -= dt() / 2;\r\n    }\r\n  });\r\n}\r\n\r\nscene(\"main\", () => {\r\n  function spawnRandomPoop() {\r\n    if (!isDead) {\r\n      wait(rand(0, 40), () => {\r\n        const poop = add([\r\n          pos(center().x + rand(0, 600), center().y + rand(0, 200)),\r\n          sprite(\"poop\"),\r\n          anchor(\"center\"),\r\n          area(),\r\n          scale(0.5),\r\n          {\r\n            time: 0,\r\n          },\r\n          \"poop\",\r\n        ]);\r\n\r\n        poopCount++;\r\n\r\n        poop.onClick(() => {\r\n          var randInt = randi(0, 10);\r\n          if (randInt == 1) {\r\n            addTextBubble({\r\n              message: \"u betta wash ya hands\\n b4 u feed me nasty :p\",\r\n            });\r\n          }\r\n\r\n          play(\"beep\");\r\n          addParticles(\r\n            \"heal\",\r\n            \"/sprites/particles/effect_heal.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n\r\n          poop.destroy();\r\n\r\n          poopCount--;\r\n        });\r\n\r\n        // Repeat the poop spawning\r\n        spawnRandomPoop();\r\n      });\r\n    }\r\n  }\r\n  // Constants\r\n  const followVal = 0.1;\r\n  const clickCooldown = 0.5;\r\n  const petArray = [\"nublin\", \"werm\", \"eye\"];\r\n\r\n  // Variables\r\n  let lastClickTime = 1;\r\n  let foodMeter = 40;\r\n  let foodLimit = 100;\r\n  let petIterator = 0;\r\n  let appleIsOut = false;\r\n  let hasBeenFed = false;\r\n  let shrinkCountdown = 1;\r\n  let beginShrinkTimer = false;\r\n  let isStarving = false;\r\n  let isDead = false;\r\n  let isIdle = true;\r\n  let poopCount = 0;\r\n  let loveMeter = 0;\r\n\r\n  // Objects\r\n\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_day\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  const pet = add([\r\n    pos(center()),\r\n    sprite(\"nublin\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.5),\r\n    animate(),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"pet\",\r\n  ]);\r\n\r\n  // Menu button objects\r\n\r\n  const buttonFeed = add([\r\n    pos(center().x, center().y + 280),\r\n    sprite(\"button_feed\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_feed\",\r\n  ]);\r\n\r\n  const buttonKill = add([\r\n    pos(center().x + 250, center().y + 280),\r\n    sprite(\"button_kill\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_kill\",\r\n  ]);\r\n\r\n  const buttonPlay = add([\r\n    pos(center().x - 250, center().y + 280),\r\n    sprite(\"button_play\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(1),\r\n    {\r\n      time: 0,\r\n    },\r\n    \"button_play\",\r\n  ]);\r\n\r\n  wait(lastClickTime - 0.5, () => {\r\n    addTextBubble({ message: \"heh... ima pet!\\ntakea good care of me >:3 \" });\r\n  });\r\n\r\n  wait(lastClickTime - 0.5, () => {\r\n    addTextBubble({ message: \"heh... ima pet!\\ntakea good care of me >:3 \" });\r\n  });\r\n\r\n  pet.onUpdate(() => {\r\n    if (isIdle) {\r\n      pet.pos = pet.pos.lerp(\r\n        vec2(\r\n          center().x + (mousePos().x - center().x) * followVal,\r\n          center().y + (mousePos().y - center().y) * followVal\r\n        ),\r\n        0.04\r\n      );\r\n\r\n      pet.time += dt();\r\n      pet.pos.y += Math.sin(pet.time * 4);\r\n\r\n      foodMeter -= dt();\r\n\r\n      if (hasBeenFed) {\r\n        shrinkCountdown -= dt();\r\n        if (shrinkCountdown <= 0 && foodMeter < foodLimit) {\r\n          shrinkCountdown = 2;\r\n          hasBeenFed = false;\r\n          beginShrinkTimer = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (beginShrinkTimer && foodMeter < foodLimit) {\r\n      pet.scaleBy(0.99);\r\n      if (pet.scale <= vec2(0.5, 0.5)) beginShrinkTimer = false;\r\n    }\r\n\r\n    if (foodMeter < 20 && !isStarving) {\r\n      addTextBubble({ message: \"mannnn.....\\n im hungy....\" });\r\n      isStarving = true;\r\n    } else if (foodMeter > 20 && isStarving) {\r\n      isStarving = false;\r\n    }\r\n\r\n    if (isDead || (foodMeter <= 0 && !isDead)) {\r\n      shake();\r\n      addTextBubble({ message: \"im dead asl ðŸ’€\" });\r\n      isDead = true;\r\n      pet.destroy();\r\n      const grave = add([\r\n        pos(center()),\r\n        sprite(\"grave\"),\r\n        anchor(\"center\"),\r\n        area(),\r\n        scale(2),\r\n        animate(),\r\n        {\r\n          time: 0,\r\n        },\r\n        \"grave\",\r\n      ]);\r\n\r\n      play(\"bell\", {\r\n        volume: 0.3,\r\n      });\r\n    }\r\n  });\r\n\r\n  spawnRandomPoop();\r\n\r\n  pet.onClick(() => {\r\n    if (appleIsOut) {\r\n      if (time() - lastClickTime >= clickCooldown) {\r\n        if (!poopCount && foodMeter < foodLimit) {\r\n          var randInt = randi(0, 10);\r\n          if (randInt == 1) {\r\n            addTextBubble({ message: \"yyummerzz >:3\" });\r\n          }\r\n\r\n          addParticles(\r\n            \"heal\",\r\n            \"/sprites/particles/effect_heal.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n\r\n          play(\"eat\", {\r\n            volume: 0.3, // set the volume to 50%\r\n          });\r\n\r\n          pet.scaleBy(1.05);\r\n\r\n          appleIsOut = false;\r\n\r\n          shrinkCountdown = 5;\r\n          hasBeenFed = true;\r\n\r\n          if (!isDead) {\r\n            foodMeter += 20;\r\n          }\r\n        } else if (poopCount > 0 && foodMeter >= foodLimit) {\r\n          addParticles(\r\n            \"poison\",\r\n            \"/sprites/particles/effect_poison.png\",\r\n            mousePos().x,\r\n            mousePos().y\r\n          );\r\n          addTextBubble({\r\n            message: \"im seriously gonna throw up\\n get that away from mee\",\r\n          });\r\n          if (loveMeter > 0) {\r\n            loveMeter--;\r\n          }\r\n        } else if (poopCount > 0) {\r\n          var randInt = randi(0, 2);\r\n          if (randInt == 1) {\r\n            addTextBubble({\r\n              message: \"theres like.. poop\\n right there. nasty\",\r\n            });\r\n          }\r\n          lastClickTime = time();\r\n        } else {\r\n          var randInt = randi(0, 3);\r\n          if (randInt == 1) {\r\n            addTextBubble({ message: \"im fucken fullll bro.\" });\r\n          }\r\n          lastClickTime = time();\r\n        }\r\n      }\r\n    } else {\r\n      if (time() - lastClickTime >= clickCooldown) {\r\n        // addTextBubble({ message: \"ya clickt me...\\nwat a nicee click >:3\" });\r\n        lastClickTime = time();\r\n\r\n        loveMeter++;\r\n\r\n        addParticles(\r\n          \"heart\",\r\n          \"/sprites/particles/effect_heart.png\",\r\n          mousePos().x,\r\n          mousePos().y\r\n        );\r\n\r\n        play(\"meow\", {\r\n          volume: 1, // set the volume to 50%\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  onKeyPress(\"a\", () => {\r\n    petIterator = (petIterator - 1 + petArray.length) % petArray.length;\r\n    pet.sprite = petArray[petIterator];\r\n  });\r\n  onKeyPress(\"d\", () => {\r\n    petIterator = (petIterator + 1) % 3;\r\n    pet.sprite = petArray[petIterator];\r\n  });\r\n\r\n  // Button event handlers\r\n\r\n  onClick(\"button_feed\", () => {\r\n    const apple = add([\r\n      pos(mousePos()),\r\n      sprite(\"apple\"),\r\n      anchor(\"center\"),\r\n      area(),\r\n      scale(0.5),\r\n      {\r\n        time: 0,\r\n      },\r\n      \"apple\",\r\n    ]);\r\n\r\n    buttonFeed.sprite = \"button_feed_pressed\";\r\n\r\n    play(\"click\", {\r\n      volume: 0.3,\r\n    });\r\n\r\n    appleIsOut = !appleIsOut;\r\n\r\n    onUpdate(() => {\r\n      apple.pos = mousePos();\r\n      if (!appleIsOut) {\r\n        apple.destroy();\r\n        buttonFeed.sprite = \"button_feed\";\r\n      }\r\n    });\r\n  });\r\n\r\n  onMousePress(\"right\", () => {\r\n    appleIsOut = false;\r\n  });\r\n\r\n  onClick(\"button_kill\", () => {\r\n    isDead = true;\r\n    buttonKill.sprite = \"button_kill_pressed\";\r\n    wait(0.2, () => {\r\n      buttonKill.sprite = \"button_kill\";\r\n    });\r\n  });\r\n\r\n  onClick(\"button_play\", () => {\r\n    buttonPlay.sprite = \"button_play_pressed\";\r\n\r\n    wait(0.2, () => {\r\n      buttonPlay.sprite = \"button_play\";\r\n    });\r\n\r\n    go(\"play\");\r\n  });\r\n});\r\n\r\nloadSprite(\"flame\", \"/sprites/particles/effect_flame.png\");\r\nloadSprite(\"enemy\", \"/sprites/objects/enemy.png\");\r\nloadSprite(\"enemy2\", \"/sprites/objects/enemy2.png\");\r\nloadSound(\"bullet\", \"/sounds/bullet.wav\");\r\nloadSound(\"reload\", \"/sounds/reload.mp3\");\r\nloadSprite(\"bg_night\", \"/sprites/backgrounds/night_bg.png\");\r\n\r\nconst hexScale = 250;\r\n\r\nconst hexPoints = [\r\n  vec2(Math.cos(0), Math.sin(0)).scale(hexScale),\r\n  vec2(Math.cos(Math.PI / 3), Math.sin(Math.PI / 3)).scale(hexScale),\r\n  vec2(Math.cos((2 * Math.PI) / 3), Math.sin((2 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n  vec2(Math.cos(Math.PI), Math.sin(Math.PI)).scale(hexScale),\r\n  vec2(Math.cos((4 * Math.PI) / 3), Math.sin((4 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n  vec2(Math.cos((5 * Math.PI) / 3), Math.sin((5 * Math.PI) / 3)).scale(\r\n    hexScale\r\n  ),\r\n];\r\n\r\nfunction getOffscreenPosition() {\r\n  const margin = 100; // how far offscreen to spawn\r\n  const side = randi(0, 4); // 0=top, 1=bottom, 2=left, 3=right\r\n\r\n  switch (side) {\r\n    case 0:\r\n      return vec2(rand(0, width()), -margin);\r\n    case 1:\r\n      return vec2(rand(0, width()), height() + margin);\r\n    case 2:\r\n      return vec2(-margin, rand(0, height()));\r\n    case 3:\r\n      return vec2(width() + margin, rand(0, height()));\r\n  }\r\n}\r\n\r\nscene(\"play\", () => {\r\n  onDraw(() => {\r\n    drawSprite({\r\n      sprite: \"bg_night\",\r\n      pos: center(),\r\n      anchor: \"center\",\r\n    });\r\n  });\r\n\r\n  function spawnEnemy() {\r\n    const pos1 = getOffscreenPosition();\r\n    const enemy = add([\r\n      pos(pos1),\r\n      sprite(\"enemy\"),\r\n      anchor(\"center\"),\r\n      area({ shape: new Polygon(hexPoints) }),\r\n      scale(0.3),\r\n      rotate(0),\r\n\r\n      animate(),\r\n      {\r\n        time: 0,\r\n        prevPos: center().clone(),\r\n      },\r\n      \"enemy\",\r\n    ]);\r\n\r\n    onUpdate(() => {\r\n      enemy.pos = enemy.pos.lerp(pet.pos, 0.01);\r\n    });\r\n\r\n    wait(rand(0, 5), () => {\r\n      spawnEnemy();\r\n    });\r\n  }\r\n  function spawnEnemy2() {\r\n    const pos2 = getOffscreenPosition();\r\n\r\n    const petTarget = pet.pos.clone();\r\n    const direction = petTarget.sub(pos2).unit().scale(400);\r\n\r\n    const enemy2 = add([\r\n      pos(pos2),\r\n      sprite(\"enemy2\"),\r\n      anchor(\"center\"),\r\n      area({ shape: new Polygon(hexPoints) }),\r\n      scale(0.3),\r\n      rotate(0),\r\n\r\n      animate(),\r\n      {\r\n        time: 0,\r\n        velocity: direction, // Save velocity\r\n      },\r\n      \"enemy\",\r\n    ]);\r\n\r\n    onUpdate(() => {\r\n      enemy2.move(enemy2.velocity);\r\n    });\r\n\r\n    wait(rand(0, 5), () => {\r\n      spawnEnemy2();\r\n    });\r\n  }\r\n\r\n  var ammoCount = 10;\r\n  var reloadCountdown = 1.5;\r\n  var isReloading = false;\r\n  var reloadPosition;\r\n  var playerLives = 3;\r\n  var isAlive = true;\r\n\r\n  const pet = add([\r\n    pos(center()),\r\n    sprite(\"nublin\"),\r\n    anchor(\"center\"),\r\n    area(),\r\n    scale(0.3),\r\n    rotate(0), // Enable rotation\r\n    animate(),\r\n    {\r\n      time: 0,\r\n      prevPos: center().clone(),\r\n    },\r\n    \"pet\",\r\n  ]);\r\n\r\n  spawnEnemy();\r\n  spawnEnemy2();\r\n\r\n  onUpdate(() => {\r\n    if (!isReloading) {\r\n      const target = mousePos();\r\n      const direction = target.sub(pet.pos).unit();\r\n      const stopDist = 100;\r\n      const adjustedTarget = target.sub(direction.scale(stopDist));\r\n\r\n      pet.pos = pet.pos.lerp(adjustedTarget, 0.1);\r\n\r\n      const angle = Math.atan2(direction.y, direction.x);\r\n      pet.angle = rad2deg(angle);\r\n\r\n      pet.prevPos = pet.pos.clone();\r\n    } else {\r\n      pet.pos = pet.pos.lerp(reloadPosition, 0.1);\r\n    }\r\n  });\r\n\r\n  if (isAlive) {\r\n    onClick(() => {\r\n      if (ammoCount > 0 && !isReloading) {\r\n        play(\"bullet\", { volume: 0.2 });\r\n        const flame = add([\r\n          pos(pet.pos),\r\n          sprite(\"flame\"),\r\n          anchor(\"center\"),\r\n          area(),\r\n          scale(0.3),\r\n          rotate(0),\r\n          move(pet.angle, 1200),\r\n          \"flame\",\r\n        ]);\r\n\r\n        wait(3, () => {\r\n          flame.destroy();\r\n        });\r\n\r\n        ammoCount--;\r\n      }\r\n    });\r\n  }\r\n\r\n  pet.onUpdate(() => {\r\n    if (isReloading) {\r\n      reloadCountdown -= dt();\r\n      if (reloadCountdown <= 0) {\r\n        isReloading = false;\r\n        reloadCountdown = 1.5;\r\n        ammoCount = 10;\r\n      }\r\n    }\r\n  });\r\n\r\n  onKeyPress(\"r\", () => {\r\n    if (!isReloading) {\r\n      reloadPosition = mousePos();\r\n      isReloading = true;\r\n      play(\"reload\");\r\n    }\r\n  });\r\n\r\n  onCollide(\"pet\", \"enemy\", () => {\r\n    shake();\r\n    playerLives--;\r\n    if (playerLives <= 0) {\r\n      addTextBubble({\r\n        message: \"u dun killt me ðŸ’€\",\r\n        x: pet.pos.x,\r\n        y: pet.pos.y,\r\n      });\r\n      pet.destroy();\r\n      isAlive = false;\r\n    } else {\r\n      addTextBubble({ message: \"yowch!\", x: pet.pos.x, y: pet.pos.y });\r\n    }\r\n  });\r\n\r\n  onCollide(\"enemy\", \"flame\", (f, e) => {\r\n    f.destroy();\r\n    e.destroy();\r\n    shake();\r\n  });\r\n});\r\n\r\ngo(\"main\");\r\n"],"names":["kaplay","overshoot","t","addParticles","name","path","x","y","data","loadedSpriteData","particleEmitter","addTextBubble","message","bubble","bubbleText","spawnRandomPoop","isDead","poop","poopCount","randInt","followVal","clickCooldown","petArray","lastClickTime","foodMeter","foodLimit","petIterator","appleIsOut","hasBeenFed","shrinkCountdown","beginShrinkTimer","isStarving","pet","buttonFeed","buttonKill","buttonPlay","apple","hexScale","hexPoints","getOffscreenPosition","spawnEnemy","pos1","enemy","spawnEnemy2","pos2","direction","enemy2","ammoCount","reloadCountdown","isReloading","reloadPosition","playerLives","isAlive","target","adjustedTarget","angle","flame","f","e"],"mappings":"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"}